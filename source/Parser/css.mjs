let fn = {}; const 
/************** Maps **************/

    /* Symbols To Inject into the Lexer */
    symbols = ["||","^=","$=","*=","<=",")"],

    /* Goto lookup maps */
    gt0 = [0,-1,2,6,3,1,9,7,-2,8,-5,4,-1,34,-5,35,-10,33,-42,11,14,-1,31,15,12,-1,13,20,17,16,22,23,24,-1,25,-3,26,32],
gt1 = [0,-2,6,36,-1,9,7,-2,8,-5,37,-1,34,-5,35,-10,33,-42,11,14,-1,31,15,12,-1,13,20,17,16,22,23,24,-1,25,-3,26,32],
gt2 = [0,-2,38,-2,9,7,-2,8,-5,39,-1,34,-5,35,-10,33,-42,11,14,-1,31,15,12,-1,13,20,17,16,22,23,24,-1,25,-3,26,32],
gt3 = [0,-9,49,-5,39,-1,34,-5,35,-10,33,-63,50,48,-2,47,-1,51],
gt4 = [0,-75,54,53,-1,14,-1,31,15,56,55,13,20,17,16,22,23,24,-1,25,-3,26,32],
gt5 = [0,-78,61,-1,31,62,-6,22,23,24,-1,25,-3,26,32],
gt6 = [0,-80,31,63,-6,64,23,24,-1,25,-3,26,32],
gt7 = [0,-80,65,-16,32],
gt8 = [0,-85,20,73,72],
gt9 = [0,-96,76],
gt10 = [0,-79,78,-16,79],
gt11 = [0,-10,83,84,-59,87,-2,86],
gt12 = [0,-33,91,-1,94,-1,92,96,93,98,-2,99,-2,97,100,-1,103,-4,104,-11,95],
gt13 = [0,-18,107,-55,109],
gt14 = [0,-28,110,112,114,117,116,-21,115],
gt15 = [0,-9,49,-5,39,-1,34,-5,35,-10,33,-63,50,48,-2,120,-1,51],
gt16 = [0,-77,121,14,-1,31,15,12,-1,13,20,17,16,22,23,24,-1,25,-3,26,32],
gt17 = [0,-9,124,-5,39,-1,34,-5,35,-10,33,-65,126,125,-2,127],
gt18 = [0,-75,130,-2,14,-1,31,15,56,55,13,20,17,16,22,23,24,-1,25,-3,26,32],
gt19 = [0,-78,14,-1,31,15,131,-1,13,20,17,16,22,23,24,-1,25,-3,26,32],
gt20 = [0,-80,31,132,-6,64,23,24,-1,25,-3,26,32],
gt21 = [0,-93,134],
gt22 = [0,-95,140],
gt23 = [0,-96,142],
gt24 = [0,-11,143,-59,87,-2,86],
gt25 = [0,-13,145,-19,146,-1,94,-1,92,96,93,98,-2,99,-2,97,100,-1,103,-4,104,-11,95],
gt26 = [0,-73,148],
gt27 = [0,-73,150],
gt28 = [0,-66,154],
gt29 = [0,-36,156],
gt30 = [0,-41,160,158,-1,162,159],
gt31 = [0,-47,164,-1,103,-4,104],
gt32 = [0,-38,96,165,98,-2,99,-2,97,100,166,103,-4,104,169,-6,171,173,170,172,-1,176,-2,175],
gt33 = [0,-29,180,114,117,116,-21,115],
gt34 = [0,-24,183,181,185,182],
gt35 = [0,-28,187,112,114,117,116,-21,115,-49,188],
gt36 = [0,-98,195,-5,51],
gt37 = [0,-105,199,197,196],
gt38 = [0,-91,202],
gt39 = [0,-77,206,14,-1,31,15,12,-1,13,20,17,16,22,23,24,-1,25,-3,26,32],
gt40 = [0,-13,207,-19,208,-1,94,-1,92,96,93,98,-2,99,-2,97,100,-1,103,-4,104,-11,95],
gt41 = [0,-33,209,-1,94,-1,92,96,93,98,-2,99,-2,97,100,-1,103,-4,104,-11,95],
gt42 = [0,-74,214],
gt43 = [0,-5,9,217,216,215,-68,11,14,-1,31,15,12,-1,13,20,17,16,22,23,24,-1,25,-3,26,32],
gt44 = [0,-35,94,-1,218,96,93,98,-2,99,-2,97,100,-1,103,-4,104,-11,95],
gt45 = [0,-36,219],
gt46 = [0,-38,220,-1,98,-2,99,-3,221,-1,103,-4,104],
gt47 = [0,-41,222],
gt48 = [0,-44,223],
gt49 = [0,-47,224,-1,103,-4,104],
gt50 = [0,-47,225,-1,103,-4,104],
gt51 = [0,-52,230,228],
gt52 = [0,-56,234],
gt53 = [0,-57,239,240,-1,241],
gt54 = [0,-69,246],
gt55 = [0,-50,253,251],
gt56 = [0,-16,256,-2,258,-1,257,259,-45,262],
gt57 = [0,-5,9,217,216,264,-68,11,14,-1,31,15,12,-1,13,20,17,16,22,23,24,-1,25,-3,26,32],
gt58 = [0,-24,265],
gt59 = [0,-26,266],
gt60 = [0,-29,267,114,117,116,-21,115],
gt61 = [0,-29,268,114,117,116,-21,115],
gt62 = [0,-77,271,14,-1,31,15,12,-1,13,20,17,16,22,23,24,-1,25,-3,26,32],
gt63 = [0,-100,273,-3,127],
gt64 = [0,-103,274,-1,199,197,275],
gt65 = [0,-105,277],
gt66 = [0,-105,199,197,278],
gt67 = [0,-94,279],
gt68 = [0,-33,284,-1,94,-1,92,96,93,98,-2,99,-2,97,100,-1,103,-4,104,-11,95],
gt69 = [0,-12,285,-15,286,112,114,117,116,-21,115,-49,287],
gt70 = [0,-5,9,291,-70,11,14,-1,31,15,12,-1,13,20,17,16,22,23,24,-1,25,-3,26,32],
gt71 = [0,-41,160,158],
gt72 = [0,-52,293],
gt73 = [0,-63,294,-1,295,-1,176,-2,175],
gt74 = [0,-63,297,-1,295,-1,176,-2,175],
gt75 = [0,-65,299],
gt76 = [0,-50,305],
gt77 = [0,-19,258,-1,307,259,-45,262],
gt78 = [0,-105,199,197,275],
gt79 = [0,-59,317],
gt80 = [0,-61,319],
gt81 = [0,-9,49,-5,39,-1,34,-5,35,-10,33,-63,50,48,-2,322,-1,51],
gt82 = [0,-22,323,-45,262],
gt83 = [0,-63,324,-1,295,-1,176,-2,175],
gt84 = [0,-63,326,-1,295,-1,176,-2,175],
gt85 = [0,-9,124,-5,39,-1,34,-2,327,-2,35,-10,33,-65,126,125,-2,127],

    // State action lookup maps
    sm0=[0,1,-1,2,-1,0,-4,0,-5,3,-6,4,-30,5,6,7,8,-1,9,-8,10],
sm1=[0,11,-3,0,-4,0],
sm2=[0,12,-1,2,-1,0,-4,0,-5,3,-6,4,-30,5,6,7,8,-1,9,-8,10],
sm3=[0,13,-1,13,-1,0,-4,0,-5,13,14,-5,13,-30,13,13,13,13,-1,13,-8,13],
sm4=[0,-4,0,-4,0,-9,15,-3,16,17,-7,18],
sm5=[0,19,-1,19,-1,0,-4,0,-5,19,-6,19,-30,19,19,19,19,-1,19,-8,19],
sm6=[0,20,-1,20,-1,0,-4,0,-5,20,-6,20,-30,20,20,20,20,-1,20,-8,20],
sm7=[0,-4,0,-4,0,-4,21,22],
sm8=[0,-2,23,-1,0,-4,0,-12,4],
sm9=[0,-4,0,-4,0,-4,24,24],
sm10=[0,-2,2,-1,0,-4,0,-4,25,25,-22,26,-11,27,28,29,5,6,7,8,-1,9,-8,10,-1,25],
sm11=[0,-2,30,-1,0,-4,0,-4,30,30,-22,30,-11,30,30,30,30,30,7,8,-1,9,-8,10,-1,30],
sm12=[0,-2,30,-1,0,-4,0,-4,30,30,-22,30,-11,30,30,30,30,30,30,30,-1,30,-8,31,-1,30],
sm13=[0,-2,32,-1,0,-4,0,-4,32,32,-22,32,-11,32,32,32,32,32,32,32,-1,32,-8,32,-1,32],
sm14=[0,-2,33,-1,0,-4,0,-43,34],
sm15=[0,-2,32,-1,0,-4,0,-4,32,32,-22,32,-11,32,32,32,32,35,32,32,-1,32,-8,32,-1,32],
sm16=[0,-2,36,-1,0,-4,0,-4,36,36,-22,36,-1,36,-9,36,36,36,36,35,36,36,-1,36,36,36,36,36,-4,36,-1,36],
sm17=[0,-4,0,-4,0,-44,37],
sm18=[0,-2,38,-1,0,-4,0,-43,38],
sm19=[0,-2,39,-1,0,-4,0,-4,39,39,-22,39,-11,39,39,39,39,39,39,39,-1,39,-8,39,-1,39],
sm20=[0,-2,40,-1,0,-4,0,-4,40,40,-22,40,-11,40,40,40,40,40,40,40,-1,40,-8,40,-1,40],
sm21=[0,-2,41,-1,0,-4,0],
sm22=[0,-2,42,-1,0,-4,0],
sm23=[0,-2,2,-1,0,-4,0,-43,43,6],
sm24=[0,-2,44,-1,0,-4,0,-57,45],
sm25=[0,-2,46,-1,0,-4,0,-4,46,46,-22,46,-11,46,46,46,46,46,46,46,-1,46,-8,46,-1,46],
sm26=[0,-2,47,-1,0,-4,0,-4,47,47,-22,47,-11,47,47,47,47,47,47,47,-1,47,-8,45,-1,47],
sm27=[0,-4,0,-4,0,-6,48],
sm28=[0,-4,0,-4,0,-6,49],
sm29=[0,-4,0,-4,0,-6,50],
sm30=[0,51,-1,2,-1,0,-4,0,-5,3,-6,4,-30,5,6,7,8,-1,9,-8,10],
sm31=[0,52,-1,52,-1,0,-4,0,-5,52,14,-5,52,-30,52,52,52,52,-1,52,-8,52],
sm32=[0,53,-1,53,-1,0,-4,0,-5,53,-6,53,-30,53,53,53,53,-1,53,-8,53],
sm33=[0,-4,0,-4,0,-6,14],
sm34=[0,54,-1,54,-1,0,-4,0,-5,54,54,54,-4,54,-30,54,54,54,54,-1,54,-8,54],
sm35=[0,-4,55,-4,0,-37,56,57,58],
sm36=[0,-2,59,-1,0,-4,0,-20,60,-2,61,-34,62],
sm37=[0,-4,0,-4,0,-15,63,-22,57,58],
sm38=[0,-2,64,65,0,-4,0,-20,66,-37,67],
sm39=[0,-2,2,-1,0,-4,0,-43,5,6,7,8,-1,9,-8,10],
sm40=[0,-2,23,-1,0,-4,0,-6,68,69,-4,4],
sm41=[0,-2,70,-1,0,-4,0,-6,71,70,-4,70],
sm42=[0,-2,72,-1,0,-4,0,-6,72,72,-4,72],
sm43=[0,-2,73,-1,0,-4,0,-6,73,73,-4,73],
sm44=[0,-2,74,-1,0,-4,0,-6,74,74,-4,74],
sm45=[0,-4,0,-4,0,-57,75],
sm46=[0,-2,2,-1,0,-4,0,-4,76,76,-22,26,-11,27,28,29,5,6,7,8,-1,9,-8,10,-1,76],
sm47=[0,-2,77,-1,0,-4,0,-4,77,77,-22,77,-11,77,77,77,77,77,77,77,-1,77,-8,77,-1,77],
sm48=[0,-2,78,-1,0,-4,0,-4,78,78,-22,78,-11,78,78,78,78,78,78,78,-1,78,-8,78,-1,78],
sm49=[0,-2,79,-1,0,-4,0,-43,79,79,79,79,-1,79,-8,79],
sm50=[0,-2,80,-1,0,-4,0,-4,80,80,-22,80,-11,80,80,80,80,80,7,8,-1,9,-8,10,-1,80],
sm51=[0,-2,80,-1,0,-4,0,-4,80,80,-22,80,-11,80,80,80,80,80,80,80,-1,80,-8,31,-1,80],
sm52=[0,-2,81,-1,0,-4,0,-4,81,81,-22,81,-11,81,81,81,81,81,81,81,-1,81,-8,81,-1,81],
sm53=[0,-2,82,-1,0,-4,0,-4,82,82,-22,82,-11,82,82,82,82,82,82,82,-1,82,-8,82,-1,82],
sm54=[0,-4,0,-4,0,-57,45],
sm55=[0,-2,83,-1,0,-4,0,-4,83,83,-22,83,-11,83,83,83,83,83,83,83,-1,83,-8,83,-1,83],
sm56=[0,-2,84,-1,0,-4,0,-4,84,84,-22,84,-1,84,-9,84,84,84,84,84,84,84,-1,84,84,84,84,84,-4,84,-1,84],
sm57=[0,-2,85,-1,0,-4,0,-43,85],
sm58=[0,-2,86,-1,0,-4,0,-4,86,86,-22,86,-11,86,86,86,86,86,86,86,-1,86,-8,86,-1,86],
sm59=[0,-2,87,-1,0,-4,0,-4,87,87,-22,87,-11,87,87,87,87,87,87,87,-1,87,-8,87,-1,87],
sm60=[0,-4,0,-4,0,-30,88,-10,89,-7,90,91,92,93],
sm61=[0,-2,33,-1,0,-4,0],
sm62=[0,-4,0,-4,0,-44,35],
sm63=[0,-2,94,-1,0,-4,0,-4,94,94,-22,94,-11,94,94,94,94,94,94,94,-1,94,-8,94,95,94],
sm64=[0,-2,96,-1,0,-4,0,-4,96,96,-22,96,-11,96,96,96,96,96,96,96,-1,96,-8,96,-1,96],
sm65=[0,-2,44,-1,0,-4,0],
sm66=[0,-2,97,-1,0,-4,0,-4,97,97,-22,97,-11,97,97,97,97,97,97,97,-1,97,-8,45,-1,97],
sm67=[0,-2,98,-1,0,-4,0,-4,98,98,-22,98,-11,98,98,98,98,98,98,98,-1,98,-8,98,-1,98],
sm68=[0,-4,99,-4,0,-37,56,57,58],
sm69=[0,100,-1,59,-1,0,-4,0,-5,100,100,-2,101,-2,100,-7,60,-2,61,-19,100,100,100,100,-1,100,-8,100,62],
sm70=[0,-4,102,-4,0,-37,102,102,102],
sm71=[0,103,-1,103,-1,0,-4,0,-5,103,103,-2,103,-2,103,-7,103,-2,103,-19,103,103,103,103,-1,103,-8,103,103],
sm72=[0,-4,0,-4,0,-3,104],
sm73=[0,-4,0,-4,0,-58,105],
sm74=[0,-4,0,-4,0,-4,106,107],
sm75=[0,108,-1,108,-1,0,-4,0,-4,108,108,108,-5,108,-30,108,108,108,108,-1,108,-8,108],
sm76=[0,109,-1,109,-1,0,-4,0,-4,109,109,109,-5,109,-30,109,109,109,109,-1,109,-8,109],
sm77=[0,-2,110,-1,0,-4,0],
sm78=[0,109,-1,109,-1,0,-4,0,-4,109,109,109,-5,109,-5,111,-24,109,109,109,109,-1,109,-8,109],
sm79=[0,112,-1,112,-1,0,-4,0,-4,112,112,112,-5,112,-30,112,112,112,112,-1,112,-8,112,-1,112],
sm80=[0,113,-1,113,-1,0,-4,0,-4,113,113,113,-5,113,-30,113,113,113,113,-1,113,-8,113,-1,113],
sm81=[0,113,-1,113,-1,0,-4,0,-4,113,113,113,-5,113,-5,114,115,-23,113,113,113,113,-1,113,-8,113,-1,113],
sm82=[0,-2,64,-1,0,-4,0,-58,62],
sm83=[0,-1,116,117,-1,0,-4,0,-20,118,-37,62],
sm84=[0,119,-1,119,-1,0,-4,0,-4,119,119,119,-5,119,-5,119,119,-23,119,119,119,119,-1,119,-8,119,-1,119],
sm85=[0,120,-1,120,-1,0,-4,0,-4,120,120,120,-5,120,-5,120,-24,120,120,120,120,-1,120,-8,120,121],
sm86=[0,-2,122,-1,0,-4,0],
sm87=[0,-4,0,-4,0,-5,123],
sm88=[0,-4,0,-4,0,-5,124],
sm89=[0,-4,0,-4,0,-5,125],
sm90=[0,-2,64,65,0,-4,0,-58,67],
sm91=[0,-4,0,-4,0,-5,126,-12,127,128,-39,126],
sm92=[0,-2,129,65,0,-4,0,-20,66,-37,67],
sm93=[0,-4,0,-4,0,-5,130,-12,130,130,-39,130],
sm94=[0,-4,0,-4,0,-5,131,-12,131,131,-39,131],
sm95=[0,-4,0,-4,0,-58,132],
sm96=[0,-4,0,-4,0,-58,121],
sm97=[0,-2,23,-1,0,-4,0,-6,133,134,-4,4],
sm98=[0,-4,0,-4,0,-4,135,135],
sm99=[0,-4,0,-4,0,-7,136],
sm100=[0,137,-1,137,-1,0,-4,0,-5,137,-1,137,-4,137,-30,137,137,137,137,-1,137,-8,137],
sm101=[0,-2,138,-1,0,-4,0,-6,138,138,-4,138],
sm102=[0,-2,139,-1,0,-4,0,-6,140,139,-4,139],
sm103=[0,-2,141,-1,0,-4,0,-6,141,141,-4,141],
sm104=[0,-2,142,-1,0,-4,0,-6,142,142,-4,142],
sm105=[0,-2,23,-1,0,-4,0,-6,143,143,-4,143],
sm106=[0,-4,144,-4,0,-3,145,-54,146],
sm107=[0,-2,147,-1,0,-4,0,-4,147,147,-22,147,-11,147,147,147,147,147,147,147,-1,147,-8,147,-1,147],
sm108=[0,-2,148,-1,0,-4,0,-4,148,148,-22,148,-11,148,148,148,148,148,148,148,-1,148,-8,148,-1,148],
sm109=[0,-2,149,-1,0,-4,0,-4,149,149,-22,149,-11,149,149,149,149,149,149,149,-1,149,-8,31,-1,149],
sm110=[0,-2,150,-1,0,-4,0,-4,150,150,-22,150,-11,150,150,150,150,150,150,150,-1,150,-8,150,-1,150],
sm111=[0,-2,151,152,0,-4,0],
sm112=[0,-4,0,-4,0,-30,153],
sm113=[0,-2,154,154,0,-4,0],
sm114=[0,-2,155,-1,0,-4,0,-4,155,155,-22,155,-11,155,155,155,155,155,155,155,-1,155,-8,155,-1,155],
sm115=[0,-2,156,-1,0,-4,0,-4,156,156,-22,156,-11,156,156,156,156,156,156,156,-1,156,-8,156,-1,156],
sm116=[0,157,-1,59,-1,0,-4,0,-5,157,157,-2,101,-2,157,-7,60,-2,61,-19,157,157,157,157,-1,157,-8,157,62],
sm117=[0,-4,158,-4,0,-37,158,158,158],
sm118=[0,157,-1,59,-1,0,-4,0,-5,157,157,-5,157,-7,60,-2,61,-19,157,157,157,157,-1,157,-8,157,62],
sm119=[0,157,-1,157,-1,0,-4,0,-4,106,157,157,-5,157,-30,157,157,157,157,-1,157,-8,157],
sm120=[0,-4,0,-4,0,-58,159],
sm121=[0,-4,0,-4,0,-3,160,-34,161],
sm122=[0,-4,0,-4,0,-3,162,-34,162,162],
sm123=[0,-4,0,-4,0,-3,160,-35,163],
sm124=[0,-4,0,-4,0,-38,57,58],
sm125=[0,-2,2,-1,0,-4,0,-5,3,-1,164,-35,5,6,7,8,-1,9,-8,10],
sm126=[0,165,-1,165,-1,0,-4,0,-4,165,165,165,-5,165,-5,111,-24,165,165,165,165,-1,165,-8,165],
sm127=[0,120,-1,120,-1,0,-4,0,-4,120,120,120,-5,120,-5,120,-24,120,120,120,120,-1,120,-8,120],
sm128=[0,165,-1,165,-1,0,-4,0,-4,165,165,165,-5,165,-30,165,165,165,165,-1,165,-8,165],
sm129=[0,-2,64,-1,0,-4,0,-20,118,-37,62],
sm130=[0,166,-1,166,-1,0,-4,0,-4,166,166,166,-5,166,-5,114,-24,166,166,166,166,-1,166,-8,166,-1,166],
sm131=[0,167,-1,167,-1,0,-4,0,-4,167,167,167,-5,167,-6,115,-23,167,167,167,167,-1,167,-8,167,-1,167],
sm132=[0,168,-1,168,-1,0,-4,0,-4,168,168,168,-5,168,-5,168,-24,168,168,168,168,-1,168,-8,168,-1,168],
sm133=[0,169,-1,169,-1,0,-4,0,-4,169,169,169,-5,169,-6,169,-23,169,169,169,169,-1,169,-8,169,-1,169],
sm134=[0,170,-1,170,-1,0,-4,0,-4,170,170,170,-5,170,-30,170,170,170,170,-1,170,-8,170,-1,170],
sm135=[0,-4,0,-4,0,-59,171],
sm136=[0,-4,0,-4,0,-59,172],
sm137=[0,-4,173,-4,0,-3,174,-23,175,175,175,175,-26,175,121,176],
sm138=[0,-4,0,-4,0,-59,177],
sm139=[0,-4,0,-4,0,-27,178,179,180,181,-26,182],
sm140=[0,-4,0,-4,0,-27,183,184,185,186],
sm141=[0,-4,0,-4,0,-27,187,187,187,187,-1,188,-1,189,190,191,-22,187],
sm142=[0,-4,0,-4,0,-27,187,187,187,187,-28,187],
sm143=[0,-4,192,-4,0,-3,193,-55,194],
sm144=[0,-1,195,-2,0,-4,0,-16,196,197],
sm145=[0,-4,0,-4,0,-5,198,-53,198],
sm146=[0,-4,0,-4,0,-5,198,-12,127,-40,198],
sm147=[0,-4,0,-4,0,-5,198,-13,128,-39,198],
sm148=[0,-4,0,-4,0,-5,199,-12,199,-40,199],
sm149=[0,-4,0,-4,0,-5,200,-13,200,-39,200],
sm150=[0,-4,0,-4,0,-59,201],
sm151=[0,-4,0,-4,0,-59,202],
sm152=[0,-4,173,-4,0,-3,174,-53,75,121,176],
sm153=[0,-4,0,-4,0,-7,203],
sm154=[0,204,-1,204,-1,0,-4,0,-5,204,-1,204,-4,204,-30,204,204,204,204,-1,204,-8,204],
sm155=[0,-2,23,-1,0,-4,0,-6,205,205,-4,205],
sm156=[0,-2,206,-1,0,-4,0,-6,206,206,-4,206],
sm157=[0,-2,207,-1,144,-4,0,-3,145,-2,207,207,-4,207,-42,208,-2,146,207],
sm158=[0,-2,209,-1,144,-4,0,-3,145,-2,209,209,-4,209,-42,209,-2,209,209],
sm159=[0,-2,210,-1,210,-4,0,-3,210,-2,210,210,-4,210,-42,210,-2,210,210],
sm160=[0,-2,211,-1,211,-4,0,-3,211,-2,211,211,-4,211,-42,211,-2,211,211],
sm161=[0,-4,0,-4,0,-49,212,-3,213,214],
sm162=[0,-4,0,-4,0,-49,215,-3,215,215],
sm163=[0,-2,216,216,0,-4,0],
sm164=[0,-4,0,-4,0,-59,217],
sm165=[0,218,-1,59,-1,0,-4,0,-5,218,218,-5,218,-7,60,-2,61,-19,218,218,218,218,-1,218,-8,218,62],
sm166=[0,218,-1,218,-1,0,-4,0,-4,106,218,218,-5,218,-30,218,218,218,218,-1,218,-8,218],
sm167=[0,-2,219,65,0,-4,0,-20,66,-37,67],
sm168=[0,220,-1,220,-1,0,-4,0,-5,220,220,-2,220,-2,220,-7,220,-2,220,-19,220,220,220,220,-1,220,-8,220,220,220],
sm169=[0,-4,0,-4,0,-3,221,-34,221,221],
sm170=[0,-4,0,-4,0,-59,222],
sm171=[0,-4,0,-4,0,-7,223],
sm172=[0,-2,2,-1,0,-4,0,-5,3,-1,224,-35,5,6,7,8,-1,9,-8,10],
sm173=[0,-2,225,-1,0,-4,0,-5,225,-1,225,-35,225,225,225,225,-1,225,-8,225],
sm174=[0,226,-1,226,-1,0,-4,0,-4,226,226,226,-5,226,-30,226,226,226,226,-1,226,-8,226],
sm175=[0,227,-1,227,-1,0,-4,0,-4,227,227,227,-5,227,-30,227,227,227,227,-1,227,-8,227],
sm176=[0,228,-1,228,-1,0,-4,0,-4,228,228,228,-5,228,-30,228,228,228,228,-1,228,-8,228],
sm177=[0,113,-1,113,-1,0,-4,0,-4,113,113,113,-5,113,-5,114,-24,113,113,113,113,-1,113,-8,113],
sm178=[0,229,-1,229,-1,0,-4,0,-4,229,229,229,-5,229,-5,229,-24,229,229,229,229,-1,229,-8,229,-1,229],
sm179=[0,230,-1,230,-1,0,-4,0,-4,230,230,230,-5,230,-6,230,-23,230,230,230,230,-1,230,-8,230,-1,230],
sm180=[0,231,-1,231,-1,0,-4,0,-4,231,231,231,-5,231,-5,231,-24,231,231,231,231,-1,231,-8,231,-1,231],
sm181=[0,232,-1,232,-1,0,-4,0,-4,232,232,232,-5,232,-6,232,-23,232,232,232,232,-1,232,-8,232,-1,232],
sm182=[0,233,-1,233,-1,0,-4,0,-4,233,233,233,-5,233,-5,233,233,-23,233,233,233,233,-1,233,-8,233,-1,233],
sm183=[0,234,-1,234,-1,0,-4,0,-4,234,234,234,-5,234,-5,234,234,-23,234,234,234,234,-1,234,-8,234,-1,234],
sm184=[0,-4,173,-4,0,-3,174,-55,235],
sm185=[0,236,-1,236,-1,0,-4,0,-4,236,236,236,-5,236,-5,236,236,-23,236,236,236,236,-1,236,-8,236,-1,236],
sm186=[0,-4,237,-4,0,-3,237,-55,237],
sm187=[0,-4,238,-4,0,-3,238,-55,238],
sm188=[0,-1,116,239,-1,0,-4,0],
sm189=[0,-1,240,240,-1,0,-4,0],
sm190=[0,-1,240,240,-1,0,-4,0,-30,241],
sm191=[0,-2,239,-1,0,-4,0],
sm192=[0,-2,242,-1,0,-4,0],
sm193=[0,-2,243,-1,0,-4,0],
sm194=[0,-2,244,-1,0,-4,0],
sm195=[0,-2,244,-1,0,-4,0,-30,245],
sm196=[0,-4,0,-4,0,-27,246,246,246,246,-28,246],
sm197=[0,-1,247,-2,0,-4,0],
sm198=[0,-4,0,-4,0,-27,248,248,248,248,-28,248],
sm199=[0,-4,192,-4,0,-3,193,-55,249],
sm200=[0,-4,250,-4,0,-3,250,-55,250],
sm201=[0,-4,251,-4,0,-3,251,-55,251],
sm202=[0,-1,195,-2,0,-4,0,-7,252,-8,196,197],
sm203=[0,-1,253,-2,0,-4,0,-7,253,-8,253,253],
sm204=[0,-4,0,-4,0,-4,254,255],
sm205=[0,-4,0,-4,0,-4,256,256],
sm206=[0,-4,0,-4,0,-4,257,257],
sm207=[0,-4,0,-4,0,-33,258],
sm208=[0,-4,0,-4,0,-7,259],
sm209=[0,-4,0,-4,0,-5,260,-12,260,-40,260],
sm210=[0,-4,0,-4,0,-5,261,-13,261,-39,261],
sm211=[0,-4,0,-4,0,-5,262,-12,262,-40,262],
sm212=[0,-4,0,-4,0,-5,263,-13,263,-39,263],
sm213=[0,-4,0,-4,0,-5,264,-12,264,264,-39,264],
sm214=[0,-4,0,-4,0,-5,265,-12,265,265,-39,265],
sm215=[0,-4,0,-4,0,-59,266],
sm216=[0,267,-1,267,-1,0,-4,0,-5,267,-1,267,-4,267,-30,267,267,267,267,-1,267,-8,267],
sm217=[0,-2,268,-1,0,-4,0,-6,268,268,-4,268],
sm218=[0,-2,269,-1,0,-4,0,-6,269,269,-4,269,-46,269],
sm219=[0,-2,270,-1,144,-4,0,-3,145,-2,270,270,-4,270,-42,270,-2,146,270],
sm220=[0,-4,0,-4,0,-56,271],
sm221=[0,-2,272,-1,272,-4,0,-3,272,-2,272,272,-4,272,-42,272,-2,272,272],
sm222=[0,-4,144,-4,0,-3,145,-54,146,273],
sm223=[0,-4,0,-4,0,-49,274],
sm224=[0,-2,275,-1,0,-4,0,-4,275,275,-22,275,-11,275,275,275,275,275,275,275,-1,275,-8,275,-1,275],
sm225=[0,-4,0,-4,0,-49,276],
sm226=[0,-2,277,-1,0,-4,0,-4,277,277,-22,277,-11,277,277,277,277,277,277,277,-1,277,-8,277,-1,277],
sm227=[0,278,-1,278,-1,0,-4,0,-4,106,278,278,-5,278,-30,278,278,278,278,-1,278,-8,278],
sm228=[0,-4,0,-4,0,-59,279],
sm229=[0,-4,0,-4,0,-59,280],
sm230=[0,-4,0,-4,0,-57,75,121],
sm231=[0,281,-1,281,-1,0,-4,0,-5,281,281,-2,281,-2,281,-7,281,-2,281,-19,281,281,281,281,-1,281,-8,281,281],
sm232=[0,-4,0,-4,0,-6,282],
sm233=[0,-2,283,-1,0,-4,0,-5,283,-1,283,-35,283,283,283,283,-1,283,-8,283],
sm234=[0,284,-1,284,-1,0,-4,0,-4,284,284,284,-5,284,-5,284,284,-23,284,284,284,284,-1,284,-8,284,-1,284],
sm235=[0,-4,285,-4,0,-3,285,-55,285],
sm236=[0,-4,0,-4,0,-59,286],
sm237=[0,-4,0,-4,0,-59,187],
sm238=[0,-4,0,-4,0,-59,175],
sm239=[0,-4,0,-4,0,-59,287],
sm240=[0,-1,288,288,-1,0,-4,0],
sm241=[0,-4,0,-4,0,-28,289],
sm242=[0,-4,0,-4,0,-27,290,-1,291],
sm243=[0,-2,292,-1,0,-4,0],
sm244=[0,-4,0,-4,0,-27,293,293,293,293,-28,293],
sm245=[0,-4,294,-4,0,-3,294,-55,294],
sm246=[0,-4,0,-4,0,-6,295],
sm247=[0,-1,296,-2,0,-4,0,-7,296,-8,296,296],
sm248=[0,-4,0,-4,0,-4,297,297],
sm249=[0,-4,0,-4,0,-6,298],
sm250=[0,-4,0,-4,0,-5,299,-12,299,299,-39,299],
sm251=[0,-2,300,-1,0,-4,0,-6,300,300,-4,300,-46,300],
sm252=[0,-2,301,-1,301,-4,0,-3,301,-2,301,301,-4,301,-42,301,-2,301,301],
sm253=[0,-2,302,-1,0,-4,0,-4,302,302,-22,302,-11,302,302,302,302,302,302,302,-1,302,-8,302,-1,302],
sm254=[0,303,-1,303,-1,0,-4,0,-5,303,303,-5,303,-7,303,-2,303,-19,303,303,303,303,-1,303,-8,303,303],
sm255=[0,-1,304,304,-1,0,-4,0,-30,305],
sm256=[0,-1,306,306,-1,0,-4,0],
sm257=[0,-2,23,-1,0,-4,0,-6,307,308,-4,4],
sm258=[0,-4,0,-4,0,-4,309,309],
sm259=[0,-4,0,-4,0,-59,310],
sm260=[0,-1,311,311,-1,0,-4,0],
sm261=[0,-4,0,-4,0,-7,312],
sm262=[0,-1,313,-2,0,-4,0,-7,313,-8,313,313],
sm263=[0,-4,0,-4,0,-7,314],
sm264=[0,-1,315,-2,0,-4,0,-7,315,-8,315,315],

    // Symbol Lookup map
    lu = new Map([[1,1],[2,2],[4,3],[8,4],[16,5],[32,6],[64,7],[128,8],[256,9],[512,10],[3,11],[264,11],[200,13],[",",14],["{",15],[";",16],["}",17],[null,3],["supports",19],["(",68],[")",69],["@",22],["import",23],["keyframes",24],["id",25],["from",26],["to",27],["and",28],["or",29],["not",30],["media",32],["only",33],[":",67],["<",37],[">",38],["<=",39],["=",40],["/",42],["%",43],["px",44],["in",45],["rad",46],["url",47],["\"",48],["'",49],["+",50],["~",51],["||",52],["*",53],["|",54],["#",55],[".",56],["[",58],["]",59],["^=",60],["$=",61],["*=",62],["i",63],["s",64],["!",65],["important",66]]),

    //Reverse Symbol Lookup map
    rlu = new Map([[1,1],[2,2],[3,4],[4,8],[5,16],[6,32],[7,64],[8,128],[9,256],[10,512],[11,3],[11,264],[13,200],[14,","],[15,"{"],[16,";"],[17,"}"],[3,null],[19,"supports"],[68,"("],[69,")"],[22,"@"],[23,"import"],[24,"keyframes"],[25,"id"],[26,"from"],[27,"to"],[28,"and"],[29,"or"],[30,"not"],[32,"media"],[33,"only"],[67,":"],[37,"<"],[38,">"],[39,"<="],[40,"="],[42,"/"],[43,"%"],[44,"px"],[45,"in"],[46,"rad"],[47,"url"],[48,"\""],[49,"'"],[50,"+"],[51,"~"],[52,"||"],[53,"*"],[54,"|"],[55,"#"],[56,"."],[58,"["],[59,"]"],[60,"^="],[61,"$="],[62,"*="],[63,"i"],[64,"s"],[65,"!"],[66,"important"]]),

    // States 
    state = [sm0,
sm1,
sm2,
sm2,
sm3,
sm4,
sm5,
sm6,
sm6,
sm7,
sm8,
sm9,
sm10,
sm11,
sm11,
sm12,
sm13,
sm14,
sm15,
sm16,
sm17,
sm18,
sm19,
sm20,
sm20,
sm20,
sm20,
sm21,
sm22,
sm23,
sm24,
sm25,
sm26,
sm27,
sm28,
sm29,
sm30,
sm31,
sm32,
sm33,
sm34,
sm35,
sm36,
sm37,
sm38,
sm8,
sm39,
sm40,
sm41,
sm42,
sm43,
sm44,
sm45,
sm46,
sm47,
sm39,
sm48,
sm49,
sm49,
sm49,
sm49,
sm50,
sm51,
sm51,
sm52,
sm53,
sm54,
sm55,
sm56,
sm57,
sm58,
sm59,
sm60,
sm61,
sm62,
sm63,
sm64,
sm65,
sm66,
sm67,
sm34,
sm34,
sm34,
sm68,
sm69,
sm70,
sm71,
sm71,
sm72,
sm72,
sm73,
sm74,
sm75,
sm76,
sm77,
sm78,
sm79,
sm79,
sm80,
sm80,
sm81,
sm82,
sm83,
sm84,
sm84,
sm85,
sm86,
sm87,
sm88,
sm88,
sm89,
sm90,
sm91,
sm92,
sm93,
sm93,
sm94,
sm94,
sm95,
sm96,
sm97,
sm98,
sm99,
sm100,
sm101,
sm102,
sm103,
sm104,
sm105,
sm106,
sm107,
sm108,
sm109,
sm110,
sm111,
sm112,
sm113,
sm113,
sm113,
sm113,
sm114,
sm39,
sm115,
sm116,
sm117,
sm118,
sm119,
sm120,
sm121,
sm122,
sm123,
sm124,
sm125,
sm36,
sm126,
sm127,
sm128,
sm129,
sm130,
sm131,
sm132,
sm82,
sm133,
sm82,
sm134,
sm135,
sm136,
sm137,
sm82,
sm138,
sm138,
sm138,
sm139,
sm140,
sm141,
sm142,
sm142,
sm143,
sm144,
sm125,
sm145,
sm146,
sm147,
sm148,
sm90,
sm149,
sm90,
sm150,
sm151,
sm152,
sm39,
sm153,
sm154,
sm154,
sm155,
sm156,
sm157,
sm158,
sm106,
sm159,
sm160,
sm160,
sm161,
sm162,
sm162,
sm163,
sm164,
sm165,
sm166,
sm166,
sm167,
sm168,
sm169,
sm168,
sm170,
sm171,
sm172,
sm173,
sm174,
sm175,
sm176,
sm177,
sm178,
sm179,
sm180,
sm181,
sm182,
sm183,
sm184,
sm185,
sm186,
sm187,
sm187,
sm188,
sm188,
sm189,
sm190,
sm189,
sm189,
sm191,
sm192,
sm193,
sm194,
sm195,
sm194,
sm194,
sm196,
sm197,
sm198,
sm198,
sm198,
sm199,
sm185,
sm200,
sm201,
sm201,
sm202,
sm203,
sm204,
sm205,
sm206,
sm206,
sm206,
sm207,
sm208,
sm209,
sm210,
sm211,
sm212,
sm213,
sm214,
sm215,
sm216,
sm217,
sm218,
sm219,
sm220,
sm221,
sm222,
sm223,
sm224,
sm225,
sm225,
sm226,
sm227,
sm228,
sm229,
sm229,
sm230,
sm231,
sm232,
sm233,
sm234,
sm235,
sm236,
sm237,
sm238,
sm239,
sm240,
sm239,
sm241,
sm242,
sm243,
sm244,
sm234,
sm245,
sm246,
sm247,
sm8,
sm144,
sm248,
sm249,
sm250,
sm251,
sm252,
sm253,
sm254,
sm188,
sm255,
sm188,
sm256,
sm256,
sm257,
sm258,
sm259,
sm260,
sm259,
sm261,
sm262,
sm263,
sm264],

/************ Functions *************/

    max = Math.max,

    //Error Functions
    e = (tk,r,o,l,p)=>{if(l.END)l.throw("Unexpected end of input");else if(l.ty & (264)) l.throw(`Unexpected space character within input "${1}" `) ; else l.throw(`Unexpected token ${l.tx} within input "${111}" `)}, 
    eh = [e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e],

    //Empty Function
    nf = ()=>-1, 

    //Environment Functions
    
redv = (ret, fn, plen, ln, t, e, o, l, s) => {        ln = max(o.length - plen, 0);        o[ln] = fn(o.slice(-plen), e, l, s, o, plen);        o.length = ln + 1;        return ret;    },
rednv = (ret, Fn, plen, ln, t, e, o, l, s) => {        ln = max(o.length - plen, 0);        o[ln] = new Fn(o.slice(-plen), e, l, s, o, plen);        o.length = ln + 1;        return ret;    },
redn = (ret, plen, t, e, o, l, s) => {        let ln = max(o.length - plen, 0);        o[ln] = o[o.length -1];        o.length = ln + 1;        return ret;    },
shftf = (ret, fn, t, e, o, l, s) => (fn(o, e, l, s), ret),
R0_import_list=function (sym,env,lex,state,output,len) {return sym[0].push(sym[1]),sym[0]},
R1_import_list=function (sym,env,lex,state,output,len) {return [sym[0]]},
R0_COMPLEX_SELECTOR_list=function (sym,env,lex,state,output,len) {return sym[0].push(sym[2]),sym[0]},
C0_RULE_SET=function (sym,env,lex,state,output,len) {this.selectors=sym[0]; this.body = sym[2]},
C0_keyframes=function (sym,env,lex,state,output,len) {this.keyframes = sym[4]},
C0_keyframes_blocks=function (sym,env,lex,state,output,len) {this.selectors = sym[0]; this.props = sym[2].props;},
R0_general_enclosed6202_group_list=function (sym,env,lex,state,output,len) {return sym[0] + sym[1]},
R1_general_enclosed6202_group_list=function (sym,env,lex,state,output,len) {return sym[0] + ""},
R0_COMPLEX_SELECTOR=function (sym,env,lex,state,output,len) {return len>1? [sym[0]].concat(sym[1]) : [sym[0]]},
R0_declaration_list=function (sym,env,lex,state,output,len) {return ({props: sym[0], at_rules:[]})},
R1_declaration_list=function (sym,env,lex,state,output,len) {return ({props: [], at_rules:[sym[0]]})},
R2_declaration_list=function (sym,env,lex,state,output,len) {return sym[0].at_rules.push(sym[1]), sym[0]},
R3_declaration_list=function (sym,env,lex,state,output,len) {return sym[0].props.push(...sym[1]), sym[0]},
R0_declaration_values=function (sym,env,lex,state,output,len) {return sym.join("")},

    //Sparse Map Lookup
    lsm = (index, map) => {    if (map[0] == 0xFFFFFFFF) return map[index+1];    for (let i = 1, ind = 0, l = map.length, n = 0; i < l && ind <= index; i++) {        if (ind !== index) {            if ((n = map[i]) > -1) ind++;            else ind += -n;        } else return map[i];    }    return -1;},

    //State Action Functions
    state_funct = [(...v)=>((redn(4099,0,...v))),
()=>(78),
()=>(42),
()=>(22),
()=>(74),
()=>(86),
()=>(110),
()=>(114),
()=>(118),
()=>(122),
(...v)=>(redn(5,1,...v)),
(...v)=>(redn(4103,1,...v)),
(...v)=>(redv(1031,R1_import_list,1,0,...v)),
()=>(162),
()=>(178),
()=>(166),
()=>(174),
()=>(170),
(...v)=>(redv(3079,R1_import_list,1,0,...v)),
(...v)=>(redn(2055,1,...v)),
()=>(186),
()=>(182),
()=>(210),
(...v)=>(redv(5127,R1_import_list,1,0,...v)),
(...v)=>(redv(78855,R0_COMPLEX_SELECTOR,1,0,...v)),
()=>(230),
()=>(234),
()=>(238),
()=>(242),
(...v)=>(rednv(83975,fn.compoundSelector,1,0,...v)),
()=>(266),
(...v)=>(rednv(86023,fn.selector,1,0,...v)),
()=>(274),
()=>(270),
(...v)=>(redn(87047,1,...v)),
(...v)=>(redn(89095,1,...v)),
()=>(278),
(...v)=>(redn(88071,1,...v)),
(...v)=>(redv(79879,R1_import_list,1,0,...v)),
(...v)=>(redn(90119,1,...v)),
()=>(282),
()=>(286),
()=>(298),
()=>(302),
()=>(310),
(...v)=>(redv(82951,R1_import_list,1,0,...v)),
(...v)=>(redn(81927,1,...v)),
()=>(322),
()=>(326),
()=>(330),
(...v)=>(redn(4107,2,...v)),
(...v)=>(redv(1035,R0_import_list,2,0,...v)),
(...v)=>(redv(3083,R0_import_list,2,0,...v)),
(...v)=>(redn(9227,2,...v)),
()=>(342),
()=>(362),
()=>(354),
()=>(358),
()=>(422),
()=>(406),
()=>(426),
()=>(410),
()=>(434),
()=>(478),
()=>(474),
()=>(446),
()=>(454),
()=>(490),
()=>(494),
(...v)=>(redv(104455,R0_declaration_list,1,0,...v)),
()=>(514),
(...v)=>(redv(104455,R1_declaration_list,1,0,...v)),
(...v)=>(redv(101383,R1_import_list,1,0,...v)),
(...v)=>(redn(100359,1,...v)),
()=>(518),
(...v)=>(redv(78859,R0_COMPLEX_SELECTOR,2,0,...v)),
(...v)=>(redv(77831,R1_import_list,1,0,...v)),
(...v)=>(rednv(76807,fn.comboSelector,1,0,...v)),
(...v)=>(redn(84999,1,...v)),
(...v)=>(rednv(83979,fn.compoundSelector,2,0,...v)),
(...v)=>(redv(79883,R0_import_list,2,0,...v)),
(...v)=>(redv(82955,R0_import_list,2,0,...v)),
(...v)=>(rednv(86027,fn.selector,2,0,...v)),
(...v)=>(redn(89099,2,...v)),
(...v)=>(redn(88075,2,...v)),
(...v)=>(rednv(91147,fn.idSelector,2,0,...v)),
(...v)=>(rednv(92171,fn.classSelector,2,0,...v)),
()=>(558),
()=>(542),
()=>(534),
()=>(546),
()=>(550),
()=>(554),
(...v)=>(rednv(98315,fn.pseudoClassSelector,2,0,...v)),
()=>(566),
(...v)=>(rednv(99339,fn.pseudoElementSelector,2,0,...v)),
(...v)=>(redn(81931,2,...v)),
(...v)=>(redv(80903,R1_import_list,1,0,...v)),
()=>(578),
(...v)=>(redn(15375,3,...v)),
()=>(590),
(...v)=>(redv(10247,R1_import_list,1,0,...v)),
(...v)=>(redn(11271,1,...v)),
()=>(598),
()=>(606),
()=>(614),
()=>(610),
(...v)=>(redv(33799,R1_import_list,1,0,...v)),
(...v)=>(redn(37895,1,...v)),
()=>(622),
()=>(630),
(...v)=>(redn(39943,1,...v)),
(...v)=>(redn(38919,1,...v)),
()=>(646),
()=>(654),
()=>(698),
()=>(670),
()=>(674),
(...v)=>(redn(48135,1,...v)),
(...v)=>(redn(67591,1,...v)),
()=>(710),
(...v)=>(redn(35847,1,...v)),
()=>(714),
(...v)=>(redn(18439,1,...v)),
()=>(718),
(...v)=>(redn(28679,1,...v)),
()=>(738),
()=>(746),
()=>(758),
(...v)=>(redn(29703,1,...v)),
(...v)=>(redn(30727,1,...v)),
()=>(762),
()=>(766),
()=>(770),
(...v)=>(redv(5135,R0_COMPLEX_SELECTOR_list,3,0,...v)),
()=>(774),
(...v)=>(rednv(6159,C0_RULE_SET,3,0,...v)),
(...v)=>(redv(104459,R2_declaration_list,2,0,...v)),
(...v)=>(redv(104459,R3_declaration_list,2,0,...v)),
()=>(778),
(...v)=>(redv(103431,R1_import_list,1,0,...v)),
(...v)=>(redn(102407,1,...v)),
(...v)=>(redv(104459,R0_declaration_list,2,0,...v)),
()=>(802),
()=>(806),
()=>(794),
(...v)=>(redv(77835,R0_import_list,2,0,...v)),
(...v)=>(rednv(76811,fn.comboSelector,2,0,...v)),
(...v)=>(rednv(83983,fn.compoundSelector,3,0,...v)),
(...v)=>(rednv(94223,fn.attribSelector,3,0,...v)),
()=>(814),
()=>(818),
()=>(822),
(...v)=>(redn(95239,1,...v)),
(...v)=>(rednv(98319,fn.pseudoClassSelector,3,0,...v)),
(...v)=>(redv(80907,R0_import_list,2,0,...v)),
(...v)=>(redn(15379,4,...v)),
(...v)=>(redv(10251,R0_import_list,2,0,...v)),
()=>(842),
()=>(850),
()=>(846),
(...v)=>(redv(74759,R1_general_enclosed6202_group_list,1,0,...v)),
()=>(854),
(...v)=>((redn(8195,0,...v))),
(...v)=>(redn(37899,2,...v)),
(...v)=>(redn(44043,2,...v)),
(...v)=>(redn(47115,2,...v)),
(...v)=>(redv(43015,R1_import_list,1,0,...v)),
(...v)=>(redv(46087,R1_import_list,1,0,...v)),
(...v)=>(redn(40971,2,...v)),
()=>(906),
()=>(910),
()=>(930),
()=>(926),
(...v)=>(redn(66567,1,...v)),
()=>(918),
(...v)=>(redn(49159,1,...v)),
()=>(942),
()=>(946),
()=>(950),
()=>(954),
()=>(934),
()=>(970),
()=>(974),
()=>(978),
()=>(982),
(...v)=>(redn(64519,1,...v)),
()=>(990),
()=>(994),
()=>(998),
()=>(1002),
()=>(1022),
()=>(1018),
()=>(1010),
()=>(1054),
()=>(1042),
()=>(1046),
(...v)=>(redn(28683,2,...v)),
(...v)=>(redv(25607,R1_import_list,1,0,...v)),
(...v)=>(redv(27655,R1_import_list,1,0,...v)),
()=>(1078),
()=>(1082),
()=>(1090),
(...v)=>(rednv(6163,C0_RULE_SET,4,0,...v)),
(...v)=>(redv(104463,R3_declaration_list,3,0,...v)),
(...v)=>(redv(101391,R0_COMPLEX_SELECTOR_list,3,0,...v)),
(...v)=>(redv(106511,fn.parseDeclaration,3,0,...v)),
()=>(1106),
(...v)=>(redn(109575,1,...v)),
(...v)=>(redv(108551,R1_general_enclosed6202_group_list,1,0,...v)),
(...v)=>(redn(107527,1,...v)),
()=>(1122),
()=>(1126),
()=>(1130),
(...v)=>(redn(93191,1,...v)),
(...v)=>(redn(95243,2,...v)),
()=>(1134),
(...v)=>(redn(15383,5,...v)),
()=>(1154),
(...v)=>(redn(75791,3,...v)),
(...v)=>(redv(74763,R0_general_enclosed6202_group_list,2,0,...v)),
()=>(1158),
()=>(1162),
(...v)=>(redn(8199,1,...v)),
(...v)=>(redv(7175,R1_import_list,1,0,...v)),
(...v)=>(redv(33807,R0_COMPLEX_SELECTOR_list,3,0,...v)),
(...v)=>(redn(37903,3,...v)),
(...v)=>(redn(36875,2,...v)),
(...v)=>(redv(43019,R0_import_list,2,0,...v)),
(...v)=>(redv(46091,R0_import_list,2,0,...v)),
(...v)=>(redn(41995,2,...v)),
(...v)=>(redn(45067,2,...v)),
(...v)=>(redn(48143,3,...v)),
(...v)=>(redn(50191,3,...v)),
()=>(1170),
(...v)=>(redn(55311,3,...v)),
(...v)=>(redv(54279,R1_general_enclosed6202_group_list,1,0,...v)),
(...v)=>(redn(53255,1,...v)),
()=>(1186),
(...v)=>(redn(57351,1,...v)),
()=>(1194),
()=>(1202),
()=>(1206),
(...v)=>(redn(58375,1,...v)),
()=>(1210),
(...v)=>(redn(71691,2,...v)),
()=>(1214),
(...v)=>(redn(70663,1,...v)),
()=>(1218),
(...v)=>(redv(52231,R1_general_enclosed6202_group_list,1,0,...v)),
(...v)=>(redn(51207,1,...v)),
()=>(1226),
(...v)=>(redv(16391,R1_import_list,1,0,...v)),
()=>(1238),
()=>(1234),
(...v)=>(redv(19463,R1_import_list,1,0,...v)),
(...v)=>(redn(22535,1,...v)),
()=>(1242),
()=>(1246),
(...v)=>(redv(25611,R0_import_list,2,0,...v)),
(...v)=>(redv(27659,R0_import_list,2,0,...v)),
(...v)=>(redn(24587,2,...v)),
(...v)=>(redn(26635,2,...v)),
(...v)=>(redn(29711,3,...v)),
(...v)=>(redn(31759,3,...v)),
()=>(1250),
(...v)=>(rednv(6167,C0_RULE_SET,5,0,...v)),
(...v)=>(redv(103439,R0_COMPLEX_SELECTOR_list,3,0,...v)),
(...v)=>(redv(106515,fn.parseDeclaration,4,0,...v)),
(...v)=>(redv(109579,R0_declaration_values,2,0,...v)),
()=>(1254),
(...v)=>(redv(108555,R0_general_enclosed6202_group_list,2,0,...v)),
()=>(1258),
()=>(1262),
(...v)=>(rednv(94231,fn.attribSelector,5,0,...v)),
(...v)=>(redn(96263,1,...v)),
(...v)=>(redn(97295,3,...v)),
(...v)=>(redn(15387,6,...v)),
()=>(1266),
(...v)=>(redn(12295,1,...v)),
(...v)=>(redn(72723,4,...v)),
(...v)=>(redn(34843,6,...v)),
(...v)=>(redv(7179,R0_import_list,2,0,...v)),
(...v)=>(redn(55315,4,...v)),
(...v)=>(redv(54283,R0_general_enclosed6202_group_list,2,0,...v)),
(...v)=>(redn(56335,3,...v)),
(...v)=>(redn(63503,3,...v)),
(...v)=>(redn(57355,2,...v)),
()=>(1274),
()=>(1282),
()=>(1286),
(...v)=>(redn(58379,2,...v)),
(...v)=>(redn(68623,3,...v)),
(...v)=>(redv(52235,R0_general_enclosed6202_group_list,2,0,...v)),
(...v)=>(rednv(17435,C0_keyframes,6,0,...v)),
(...v)=>(redv(16395,R0_import_list,2,0,...v)),
(...v)=>(redn(69643,2,...v)),
(...v)=>(redn(23579,6,...v)),
(...v)=>(redn(32787,4,...v)),
(...v)=>(redn(105483,2,...v)),
(...v)=>(redv(109583,R0_declaration_values,3,0,...v)),
(...v)=>(rednv(94235,fn.attribSelector,6,0,...v)),
(...v)=>(redn(13331,4,...v)),
(...v)=>(redn(60423,1,...v)),
()=>(1302),
(...v)=>(redn(62471,1,...v)),
()=>(1318),
()=>(1314),
(...v)=>(redv(19471,R0_COMPLEX_SELECTOR_list,3,0,...v)),
(...v)=>(redn(63511,5,...v)),
(...v)=>(redn(60427,2,...v)),
()=>(1322),
(...v)=>(rednv(21523,C0_keyframes_blocks,4,0,...v)),
(...v)=>(redn(20487,1,...v)),
(...v)=>(rednv(21527,C0_keyframes_blocks,5,0,...v))],

    //Goto Lookup Functions
    goto = [v=>lsm(v,gt0),
nf,
v=>lsm(v,gt1),
v=>lsm(v,gt2),
nf,
nf,
nf,
nf,
nf,
nf,
v=>lsm(v,gt3),
nf,
v=>lsm(v,gt4),
v=>lsm(v,gt5),
v=>lsm(v,gt6),
v=>lsm(v,gt7),
nf,
nf,
nf,
nf,
nf,
nf,
nf,
nf,
nf,
nf,
nf,
nf,
nf,
v=>lsm(v,gt8),
v=>lsm(v,gt9),
nf,
v=>lsm(v,gt10),
nf,
nf,
nf,
v=>lsm(v,gt2),
nf,
nf,
nf,
nf,
v=>lsm(v,gt11),
v=>lsm(v,gt12),
v=>lsm(v,gt13),
v=>lsm(v,gt14),
v=>lsm(v,gt15),
v=>lsm(v,gt16),
v=>lsm(v,gt17),
nf,
nf,
nf,
nf,
nf,
v=>lsm(v,gt18),
nf,
v=>lsm(v,gt19),
nf,
nf,
nf,
nf,
nf,
v=>lsm(v,gt20),
v=>lsm(v,gt7),
v=>lsm(v,gt7),
nf,
nf,
v=>lsm(v,gt9),
nf,
nf,
nf,
nf,
nf,
v=>lsm(v,gt21),
nf,
nf,
v=>lsm(v,gt22),
nf,
nf,
v=>lsm(v,gt23),
nf,
nf,
nf,
nf,
v=>lsm(v,gt24),
v=>lsm(v,gt25),
nf,
nf,
nf,
v=>lsm(v,gt26),
v=>lsm(v,gt27),
nf,
nf,
nf,
nf,
v=>lsm(v,gt28),
v=>lsm(v,gt29),
nf,
nf,
nf,
nf,
v=>lsm(v,gt30),
v=>lsm(v,gt31),
v=>lsm(v,gt32),
nf,
nf,
nf,
nf,
nf,
nf,
nf,
nf,
v=>lsm(v,gt33),
v=>lsm(v,gt34),
v=>lsm(v,gt35),
nf,
nf,
nf,
nf,
nf,
nf,
v=>lsm(v,gt17),
nf,
nf,
nf,
nf,
nf,
nf,
nf,
v=>lsm(v,gt36),
v=>lsm(v,gt37),
nf,
nf,
v=>lsm(v,gt7),
nf,
v=>lsm(v,gt38),
nf,
nf,
nf,
nf,
nf,
nf,
v=>lsm(v,gt39),
nf,
v=>lsm(v,gt40),
nf,
v=>lsm(v,gt41),
nf,
nf,
nf,
nf,
nf,
v=>lsm(v,gt42),
v=>lsm(v,gt43),
v=>lsm(v,gt44),
v=>lsm(v,gt45),
nf,
nf,
v=>lsm(v,gt46),
v=>lsm(v,gt47),
v=>lsm(v,gt48),
nf,
v=>lsm(v,gt49),
nf,
v=>lsm(v,gt50),
nf,
nf,
nf,
v=>lsm(v,gt51),
v=>lsm(v,gt31),
nf,
nf,
nf,
v=>lsm(v,gt52),
v=>lsm(v,gt53),
v=>lsm(v,gt54),
nf,
nf,
v=>lsm(v,gt55),
v=>lsm(v,gt56),
v=>lsm(v,gt57),
nf,
v=>lsm(v,gt58),
v=>lsm(v,gt59),
nf,
v=>lsm(v,gt60),
nf,
v=>lsm(v,gt61),
nf,
nf,
v=>lsm(v,gt51),
v=>lsm(v,gt62),
nf,
nf,
nf,
v=>lsm(v,gt63),
nf,
v=>lsm(v,gt64),
v=>lsm(v,gt65),
v=>lsm(v,gt66),
nf,
nf,
nf,
v=>lsm(v,gt67),
nf,
nf,
nf,
nf,
v=>lsm(v,gt68),
nf,
nf,
v=>lsm(v,gt69),
nf,
nf,
nf,
nf,
nf,
v=>lsm(v,gt70),
nf,
nf,
nf,
nf,
v=>lsm(v,gt71),
nf,
nf,
nf,
nf,
nf,
nf,
v=>lsm(v,gt72),
nf,
nf,
nf,
nf,
v=>lsm(v,gt73),
v=>lsm(v,gt74),
nf,
nf,
nf,
nf,
v=>lsm(v,gt75),
nf,
nf,
nf,
nf,
nf,
nf,
nf,
nf,
nf,
nf,
nf,
v=>lsm(v,gt76),
nf,
nf,
nf,
nf,
v=>lsm(v,gt77),
nf,
nf,
nf,
nf,
nf,
nf,
nf,
nf,
nf,
nf,
nf,
nf,
nf,
nf,
nf,
nf,
nf,
nf,
v=>lsm(v,gt78),
nf,
nf,
v=>lsm(v,gt78),
nf,
nf,
nf,
nf,
nf,
nf,
nf,
nf,
nf,
nf,
nf,
nf,
nf,
nf,
nf,
nf,
nf,
nf,
nf,
nf,
nf,
v=>lsm(v,gt79),
v=>lsm(v,gt80),
nf,
nf,
nf,
nf,
nf,
nf,
v=>lsm(v,gt81),
v=>lsm(v,gt82),
nf,
nf,
nf,
nf,
nf,
nf,
nf,
v=>lsm(v,gt83),
nf,
v=>lsm(v,gt84),
nf,
nf,
v=>lsm(v,gt85),
nf,
nf,
nf,
nf,
nf,
nf,
nf,
nf];

function getToken(l, SYM_LU) {
    if (l.END) return 0; /*3*/

    switch (l.ty) {
        case 2:
            if (SYM_LU.has(l.tx)) return SYM_LU.get(l.tx);
            return 2;
        case 1:
            return 1;
        case 4:
            return 3;
        case 256:
            return 9;
        case 8:
            return 4;
        case 512:
            return 10;
        default:
            return SYM_LU.get(l.tx) || SYM_LU.get(l.ty);
    }
}

/************ Parser *************/

function parser(l, e = {}) {
    
    fn = e.functions;

    l.IWS = false;
    l.PARSE_STRING = true;

    if (symbols.length > 0) {
        symbols.forEach(s => { l.addSymbol(s) });
        l.tl = 0;
        l.next();
    }

    const o = [],
        ss = [0, 0];

    let time = 1000000,
        RECOVERING = 100,
        tk = getToken(l, lu),
        p = l.copy(),
        sp = 1,
        len = 0,
        off = 0;

    outer:

        while (time-- > 0) {

            const fn = lsm(tk, state[ss[sp]]) || 0;

            /*@*/// console.log({end:l.END, state:ss[sp], tx:l.tx, ty:l.ty, tk:tk, rev:rlu.get(tk), s_map:state[ss[sp]], res:lsm(tk, state[ss[sp]])});

            let r,
                gt = -1;

            if (fn == 0) {
                /*Ignore the token*/
                l.next();
                tk = getToken(l, lu);
                continue;
            }

            if (fn > 0) {
                r = state_funct[fn - 1](tk, e, o, l, ss[sp - 1]);
            } else {
                if (RECOVERING > 1 && !l.END) {
                    if (tk !== lu.get(l.ty)) {
                        //console.log("ABLE", rlu.get(tk), l.tx, tk )
                        tk = lu.get(l.ty);
                        continue;
                    }

                    if (tk !== 13) {
                        //console.log("MABLE")
                        tk = 13;
                        RECOVERING = 1;
                        continue;
                    }
                }

                tk = getToken(l, lu);

                const recovery_token = eh[ss[sp]](tk, e, o, l, p, ss[sp], lu);

                if (RECOVERING > 0 && recovery_token) {
                    RECOVERING = -1; /* To prevent infinite recursion */
                    tk = recovery_token;
                    l.tl = 0; /*reset current token */
                    continue;
                }
            }

            switch (r & 3) {
                case 0:
                    /* ERROR */

                    if (tk == "$")
                        l.throw("Unexpected end of input");
                    l.throw(`Unexpected token [${RECOVERING ? l.next().tx : l.tx}]`);
                    return [null];

                case 1:
                    /* ACCEPT */
                    break outer;

                case 2:
                    /*SHIFT */
                    o.push(l.tx);
                    ss.push(off, r >> 2);
                    sp += 2;
                    p.sync(l);
                    l.next();
                    off = l.off;
                    tk = getToken(l, lu);
                    RECOVERING++;
                    break;

                case 3:
                    /* REDUCE */

                    len = (r & 0x3FC) >> 1;

                    ss.length -= len;
                    sp -= len;
                    gt = goto[ss[sp]](r >> 10);

                    if (gt < 0)
                        l.throw("Invalid state reached!");

                    ss.push(off, gt);
                    sp += 2;
                    break;
            }
        }
    return o[0];
}; export default parser;