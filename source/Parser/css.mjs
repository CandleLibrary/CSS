let fn = {}; const 
/************** Maps **************/

    /* Symbols To Inject into the Lexer */
    symbols = ["||","^=","$=","*=","<="],

    /* Goto lookup maps */
    gt0 = [0,-1,4,2,7,3,1,10,8,-2,9,-5,5,-1,16,-4,17,-10,15,-45,12,-4,13],
gt1 = [0,-1,19,-1,7,18,-1,10,8,-2,9,-5,5,-1,16,-4,17,-10,15,-45,12,-4,13],
gt2 = [0,-3,20,-2,10,8,-2,9,-5,21,-1,16,-4,17,-10,15,-45,12,-4,13],
gt3 = [0,-10,31,-5,21,-1,16,-4,17,-10,15,-66,32,30,-2,29,-1,33],
gt4 = [0,-78,36,35,-5,38,37],
gt5 = [0,-81,44,-1,62,45,-2,43,51,48,47,53,54,55,-1,56,-3,57,63],
gt6 = [0,-11,67,68,-59,71,-4,70],
gt7 = [0,-33,75,-1,78,-1,76,80,77,82,-2,83,-2,81,84,-1,87,-4,88,-11,79],
gt8 = [0,-19,91,-57,93],
gt9 = [0,-28,94,96,98,101,100,-21,99],
gt10 = [0,-10,31,-5,21,-1,16,-4,17,-10,15,-66,32,30,-2,104,-1,33],
gt11 = [0,-80,105,-4,13],
gt12 = [0,-10,108,-5,21,-1,16,-4,17,-10,15,-68,110,109,-2,111],
gt13 = [0,-78,114,-6,38,37],
gt14 = [0,-85,115],
gt15 = [0,-81,116,-1,62,117,-6,53,54,55,-1,56,-3,57,63],
gt16 = [0,-83,62,119,-6,121,54,55,-1,56,-3,57,63],
gt17 = [0,-83,123,-16,63],
gt18 = [0,-88,51,131,130],
gt19 = [0,-99,134],
gt20 = [0,-82,136,-16,137],
gt21 = [0,-12,138,-59,71,-4,70],
gt22 = [0,-14,140,-18,141,-1,78,-1,76,80,77,82,-2,83,-2,81,84,-1,87,-4,88,-11,79],
gt23 = [0,-73,144,143],
gt24 = [0,-75,147,146],
gt25 = [0,-71,149,-5,150],
gt26 = [0,-66,153],
gt27 = [0,-36,155],
gt28 = [0,-41,159,157,-1,161,158],
gt29 = [0,-47,163,-1,87,-4,88],
gt30 = [0,-38,80,164,82,-2,83,-2,81,84,165,87,-4,88,168,-6,170,172,169,171,-1,175,-2,174],
gt31 = [0,-29,179,98,101,100,-21,99],
gt32 = [0,-24,182,180,184,181],
gt33 = [0,-28,186,96,98,101,100,-21,99,-52,187],
gt34 = [0,-101,194,-5,33],
gt35 = [0,-108,198,196,195],
gt36 = [0,-83,62,201,-6,121,54,55,-1,56,-3,57,63],
gt37 = [0,-96,206],
gt38 = [0,-98,212],
gt39 = [0,-99,214],
gt40 = [0,-14,215,-18,216,-1,78,-1,76,80,77,82,-2,83,-2,81,84,-1,87,-4,88,-11,79],
gt41 = [0,-33,217,-1,78,-1,76,80,77,82,-2,83,-2,81,84,-1,87,-4,88,-11,79],
gt42 = [0,-73,220],
gt43 = [0,-75,222],
gt44 = [0,-6,10,225,224,223,-70,12,-4,13],
gt45 = [0,-35,78,-1,226,80,77,82,-2,83,-2,81,84,-1,87,-4,88,-11,79],
gt46 = [0,-36,227],
gt47 = [0,-38,228,-1,82,-2,83,-3,229,-1,87,-4,88],
gt48 = [0,-41,230],
gt49 = [0,-44,231],
gt50 = [0,-47,232,-1,87,-4,88],
gt51 = [0,-47,233,-1,87,-4,88],
gt52 = [0,-52,238,236],
gt53 = [0,-56,242],
gt54 = [0,-57,247,248,-1,249],
gt55 = [0,-69,254],
gt56 = [0,-50,261,259],
gt57 = [0,-17,264,-2,266,265,267,-45,270],
gt58 = [0,-6,10,225,224,272,-70,12,-4,13],
gt59 = [0,-24,273],
gt60 = [0,-26,274],
gt61 = [0,-29,275,98,101,100,-21,99],
gt62 = [0,-29,276,98,101,100,-21,99],
gt63 = [0,-80,279,-4,13],
gt64 = [0,-103,281,-3,111],
gt65 = [0,-106,282,-1,198,196,283],
gt66 = [0,-108,285],
gt67 = [0,-108,198,196,286],
gt68 = [0,-94,288],
gt69 = [0,-80,292,-4,13],
gt70 = [0,-33,293,-1,78,-1,76,80,77,82,-2,83,-2,81,84,-1,87,-4,88,-11,79],
gt71 = [0,-13,294,-14,295,96,98,101,100,-21,99,-52,296],
gt72 = [0,-6,10,299,-72,12,-4,13],
gt73 = [0,-41,159,157],
gt74 = [0,-52,301],
gt75 = [0,-63,302,-1,303,-1,175,-2,174],
gt76 = [0,-63,305,-1,303,-1,175,-2,174],
gt77 = [0,-65,307],
gt78 = [0,-50,313],
gt79 = [0,-20,266,315,267,-45,270],
gt80 = [0,-108,198,196,283],
gt81 = [0,-97,323],
gt82 = [0,-59,329],
gt83 = [0,-61,331],
gt84 = [0,-10,31,-5,21,-1,16,-4,17,-10,15,-66,32,30,-2,334,-1,33],
gt85 = [0,-22,335,-45,270],
gt86 = [0,-63,337,-1,303,-1,175,-2,174],
gt87 = [0,-63,339,-1,303,-1,175,-2,174],

    // State action lookup maps
    sm0=[0,1,-3,0,-4,0,-5,2,-6,3,-37,4],
sm1=[0,5,-3,0,-4,0],
sm2=[0,6,-3,0,-4,0,-5,2,-6,3,-37,4],
sm3=[0,7,-3,0,-4,0,-5,7,-6,7,-37,7],
sm4=[0,8,-3,0,-4,0,-5,8,9,-5,8,-37,8],
sm5=[0,-4,0,-4,0,-9,10,-3,11,12,-7,13],
sm6=[0,14,-3,0,-4,0,-5,14,-6,14,-37,14],
sm7=[0,15,-3,0,-4,0,-5,15,-6,15,-37,15],
sm8=[0,-4,0,-4,0,-4,16,17],
sm9=[0,-2,18,-1,0,-4,0,-12,3],
sm10=[0,-4,0,-4,0,-4,19,19],
sm11=[0,-4,0,-4,0,-4,20,20,-5,20,-16,21,-13,22,23,24,-5,4],
sm12=[0,-2,25,-1,0,-4,0,-45,26,27,28,29,-1,30,31,-7,32],
sm13=[0,-4,0,-4,0,-6,33],
sm14=[0,-4,0,-4,0,-6,34],
sm15=[0,-4,0,-4,0,-6,35],
sm16=[0,36,-3,0,-4,0,-5,2,-6,3,-37,4],
sm17=[0,37,-3,0,-4,0,-5,37,-6,37,-37,37],
sm18=[0,38,-3,0,-4,0,-5,38,-6,38,-37,38],
sm19=[0,-4,0,-4,0,-6,9],
sm20=[0,39,-1,39,-1,0,-4,0,-5,39,39,39,-4,39,-37,39],
sm21=[0,-4,40,-4,0,-37,41,42,43],
sm22=[0,-2,44,-1,0,-4,0,-10,45,-9,46,-2,47],
sm23=[0,-4,0,-4,0,-15,48,-22,42,43],
sm24=[0,-2,49,50,0,-4,0,-10,51,-9,52],
sm25=[0,-4,0,-4,0,-50,4],
sm26=[0,-2,18,-1,0,-4,0,-6,53,54,-4,3],
sm27=[0,-2,55,-1,0,-4,0,-6,56,55,-4,55],
sm28=[0,-2,57,-1,0,-4,0,-6,57,57,-4,57],
sm29=[0,-2,58,-1,0,-4,0,-6,58,58,-4,58],
sm30=[0,-2,59,-1,0,-4,0,-6,59,59,-4,59],
sm31=[0,-4,0,-4,0,-59,60],
sm32=[0,-4,0,-4,0,-4,61,61,-5,61,-16,21,-13,22,23,24,-5,4],
sm33=[0,-4,0,-4,0,-4,62,62,-5,62,-16,62,-13,62,62,62,-5,62],
sm34=[0,-4,0,-4,0,-4,63,63,-5,63,-16,63,-13,63,63,63,-5,63],
sm35=[0,-4,0,-4,0,-50,64],
sm36=[0,-4,0,-4,0,-47,28,29,-1,30,65,-7,32],
sm37=[0,-4,0,-4,0,-47,28,29,-1,30,66,-7,32],
sm38=[0,-4,0,-4,0,-51,67,-7,68],
sm39=[0,-4,0,-4,0,-4,69,69,-5,69,-16,69,-13,69,69,69,-5,69],
sm40=[0,-4,0,-4,0,-47,70,70,-1,70,70,-7,70],
sm41=[0,-2,71,-1,0,-4,0,-45,72],
sm42=[0,-4,0,-4,0,-46,73,70,70,-1,70,70,-7,70],
sm43=[0,-4,0,-4,0,-30,74,-12,74,-2,73,74,74,-1,74,74,74,74,74,-4,74],
sm44=[0,-4,0,-4,0,-46,75],
sm45=[0,-2,76,-1,0,-4,0,-45,76],
sm46=[0,-4,0,-4,0,-47,77,77,-1,77,77,-7,77],
sm47=[0,-4,0,-4,0,-47,78,78,-1,78,78,-7,78],
sm48=[0,-2,79,-1,0,-4,0],
sm49=[0,-2,80,-1,0,-4,0],
sm50=[0,-2,25,-1,0,-4,0,-45,81,27],
sm51=[0,-2,82,-1,0,-4,0,-59,83],
sm52=[0,-4,0,-4,0,-51,84,-7,84],
sm53=[0,-4,0,-4,0,-51,85,-7,83],
sm54=[0,-4,86,-4,0,-37,41,42,43],
sm55=[0,87,-1,44,-1,0,-4,0,-5,87,87,-2,88,45,-1,87,-7,46,-2,47,-26,87],
sm56=[0,-4,89,-4,0,-37,89,89,89],
sm57=[0,90,-1,90,-1,0,-4,0,-5,90,90,-2,90,90,-1,90,-7,90,-2,90,-26,90],
sm58=[0,-4,0,-4,0,-3,91],
sm59=[0,-4,0,-4,0,-3,92],
sm60=[0,-4,0,-4,0,-38,42,43],
sm61=[0,-4,0,-4,0,-4,93,94],
sm62=[0,95,-3,0,-4,0,-4,95,95,95,-5,95,-37,95],
sm63=[0,96,-3,0,-4,0,-4,96,96,96,-5,96,-37,96],
sm64=[0,-2,97,-1,0,-4,0],
sm65=[0,96,-3,0,-4,0,-4,96,96,96,-5,96,-5,98,-31,96],
sm66=[0,99,-3,0,-4,0,-4,99,99,99,-4,99,99,-37,99],
sm67=[0,100,-3,0,-4,0,-4,100,100,100,-4,100,100,-37,100],
sm68=[0,100,-3,0,-4,0,-4,100,100,100,-4,100,100,-5,101,102,-30,100],
sm69=[0,-2,49,-1,0,-4,0,-10,45],
sm70=[0,-1,103,104,-1,0,-4,0,-10,45,-9,105],
sm71=[0,106,-3,0,-4,0,-4,106,106,106,-4,106,106,-5,106,106,-30,106],
sm72=[0,107,-3,0,-4,0,-4,107,107,107,-3,108,-1,107,-5,107,-31,107],
sm73=[0,-2,109,-1,0,-4,0],
sm74=[0,-4,0,-4,0,-5,110],
sm75=[0,-4,0,-4,0,-5,111],
sm76=[0,-4,0,-4,0,-5,112],
sm77=[0,-2,49,50,0,-4,0,-10,51],
sm78=[0,-4,0,-4,0,-5,113,-5,113,-6,114,115],
sm79=[0,-2,116,50,0,-4,0,-10,51,-9,52],
sm80=[0,-4,0,-4,0,-5,117,-5,117,-6,117,117],
sm81=[0,-4,0,-4,0,-5,118,-5,118,-6,118,118],
sm82=[0,-4,0,-4,0,-10,119],
sm83=[0,-4,0,-4,0,-10,108],
sm84=[0,-2,18,-1,0,-4,0,-6,120,121,-4,3],
sm85=[0,-4,0,-4,0,-4,122,122],
sm86=[0,-4,0,-4,0,-7,123],
sm87=[0,124,-3,0,-4,0,-5,124,-1,124,-4,124,-37,124],
sm88=[0,-2,125,-1,0,-4,0,-6,125,125,-4,125],
sm89=[0,-2,126,-1,0,-4,0,-6,127,126,-4,126],
sm90=[0,-2,128,-1,0,-4,0,-6,128,128,-4,128],
sm91=[0,-2,129,-1,0,-4,0,-6,129,129,-4,129],
sm92=[0,-2,18,-1,0,-4,0,-6,130,130,-4,130],
sm93=[0,-4,131,-4,0,-3,132,-6,133],
sm94=[0,-4,0,-4,0,-4,134,134,-5,134,-16,134,-13,134,134,134,-5,134],
sm95=[0,-4,0,-4,0,-4,135,135,-5,135,-16,135,-13,135,135,135,-5,135],
sm96=[0,-4,0,-4,0,-47,28,29,-1,30,136,-7,32],
sm97=[0,-4,0,-4,0,-51,137,-7,68],
sm98=[0,-4,0,-4,0,-4,138,138,-5,138,-16,138,-13,138,138,138,-5,138],
sm99=[0,-4,0,-4,0,-51,139,-7,68],
sm100=[0,-4,0,-4,0,-47,140,140,-1,140,140,-7,140],
sm101=[0,-4,0,-4,0,-51,141,-7,141],
sm102=[0,-4,0,-4,0,-59,83],
sm103=[0,-4,0,-4,0,-47,142,142,-1,142,142,-7,142],
sm104=[0,-4,0,-4,0,-30,143,-12,143,-3,143,143,-1,143,143,143,143,143,-4,143],
sm105=[0,-2,144,-1,0,-4,0,-45,144],
sm106=[0,-4,0,-4,0,-47,145,145,-1,145,145,-7,145],
sm107=[0,-4,0,-4,0,-47,146,146,-1,146,146,-7,146],
sm108=[0,-4,0,-4,0,-30,147,-12,148,-7,149,150,151,152],
sm109=[0,-2,71,-1,0,-4,0],
sm110=[0,-4,0,-4,0,-46,73],
sm111=[0,-4,0,-4,0,-10,153,-36,154,154,-1,154,154,-7,154],
sm112=[0,-4,0,-4,0,-51,155,-7,155],
sm113=[0,-2,82,-1,0,-4,0],
sm114=[0,-4,0,-4,0,-51,156,-7,83],
sm115=[0,-4,0,-4,0,-51,157,-7,157],
sm116=[0,158,-1,44,-1,0,-4,0,-5,158,158,-2,88,45,-1,158,-7,46,-2,47,-26,158],
sm117=[0,-4,159,-4,0,-37,159,159,159],
sm118=[0,158,-1,44,-1,0,-4,0,-5,158,158,-3,45,-1,158,-7,46,-2,47,-26,158],
sm119=[0,158,-3,0,-4,0,-4,93,158,158,-5,158,-37,158],
sm120=[0,-4,0,-4,0,-10,160],
sm121=[0,-4,0,-4,0,-3,91,-34,161],
sm122=[0,-4,0,-4,0,-3,162,-34,162],
sm123=[0,-4,0,-4,0,-3,163,-34,163],
sm124=[0,-4,0,-4,0,-3,92,-35,164],
sm125=[0,-4,0,-4,0,-3,165,-35,165],
sm126=[0,-4,0,-4,0,-3,166,-35,166],
sm127=[0,167,-1,167,-1,0,-4,0,-5,167,167,-2,167,167,-1,167,-7,167,-2,167,-26,167],
sm128=[0,168,-1,168,-1,0,-4,0,-5,168,168,-2,168,168,-1,168,-7,168,-2,168,-26,168],
sm129=[0,-4,0,-4,0,-5,2,-1,169,-42,4],
sm130=[0,170,-3,0,-4,0,-4,170,170,170,-5,170,-5,98,-31,170],
sm131=[0,107,-3,0,-4,0,-4,107,107,107,-5,107,-5,107,-31,107],
sm132=[0,170,-3,0,-4,0,-4,170,170,170,-5,170,-37,170],
sm133=[0,-2,49,-1,0,-4,0,-10,45,-9,105],
sm134=[0,171,-3,0,-4,0,-4,171,171,171,-4,171,171,-5,101,-31,171],
sm135=[0,172,-3,0,-4,0,-4,172,172,172,-4,172,172,-6,102,-30,172],
sm136=[0,173,-3,0,-4,0,-4,173,173,173,-4,173,173,-5,173,-31,173],
sm137=[0,174,-3,0,-4,0,-4,174,174,174,-4,174,174,-6,174,-30,174],
sm138=[0,175,-3,0,-4,0,-4,175,175,175,-4,175,175,-37,175],
sm139=[0,-4,0,-4,0,-11,176],
sm140=[0,-4,0,-4,0,-11,177],
sm141=[0,-4,178,-4,0,-3,179,-6,108,180,-15,181,181,181,181,-28,181],
sm142=[0,-4,0,-4,0,-11,182],
sm143=[0,-4,0,-4,0,-27,183,184,185,186,-28,187],
sm144=[0,-4,0,-4,0,-27,188,189,190,191],
sm145=[0,-4,0,-4,0,-11,192,-15,192,192,192,192,-1,193,-1,194,195,196],
sm146=[0,-4,0,-4,0,-11,192,-15,192,192,192,192],
sm147=[0,-4,197,-4,0,-3,198,-7,199],
sm148=[0,-1,200,-2,0,-4,0,-16,201,202],
sm149=[0,-4,0,-4,0,-5,203,-5,203],
sm150=[0,-4,0,-4,0,-5,203,-5,203,-6,114],
sm151=[0,-4,0,-4,0,-5,203,-5,203,-7,115],
sm152=[0,-4,0,-4,0,-5,204,-5,204,-6,204],
sm153=[0,-4,0,-4,0,-5,205,-5,205,-7,205],
sm154=[0,-4,0,-4,0,-11,206],
sm155=[0,-4,0,-4,0,-11,207],
sm156=[0,-4,178,-4,0,-3,179,-6,108,180,-47,60],
sm157=[0,-4,0,-4,0,-7,208],
sm158=[0,209,-3,0,-4,0,-5,209,-1,209,-4,209,-37,209],
sm159=[0,-2,18,-1,0,-4,0,-6,210,210,-4,210],
sm160=[0,-2,211,-1,0,-4,0,-6,211,211,-4,211],
sm161=[0,-2,212,-1,131,-4,0,-3,132,-2,212,212,-2,133,212,212,-44,213],
sm162=[0,-2,214,-1,131,-4,0,-3,132,-2,214,214,-2,214,214,214,-44,214],
sm163=[0,-2,215,-1,215,-4,0,-3,215,-2,215,215,-2,215,215,215,-44,215],
sm164=[0,-2,216,-1,216,-4,0,-3,216,-2,216,216,-2,216,216,216,-44,216],
sm165=[0,-4,0,-4,0,-51,217,-7,68],
sm166=[0,-4,0,-4,0,-4,218,218,-5,218,-16,218,-13,218,218,218,-5,218],
sm167=[0,-4,0,-4,0,-47,219,219,-1,219,219,-7,219],
sm168=[0,-2,220,221,0,-4,0],
sm169=[0,-4,0,-4,0,-30,222],
sm170=[0,-2,223,223,0,-4,0],
sm171=[0,-4,0,-4,0,-47,224,224,-1,224,224,-7,224],
sm172=[0,-4,0,-4,0,-51,225,-7,225],
sm173=[0,226,-1,44,-1,0,-4,0,-5,226,226,-3,45,-1,226,-7,46,-2,47,-26,226],
sm174=[0,226,-3,0,-4,0,-4,93,226,226,-5,226,-37,226],
sm175=[0,-2,227,50,0,-4,0,-10,51,-9,52],
sm176=[0,228,-1,228,-1,0,-4,0,-5,228,228,-2,228,228,-1,228,-7,228,-2,228,-26,228],
sm177=[0,-4,0,-4,0,-3,229,-34,229],
sm178=[0,-4,0,-4,0,-3,230,-35,230],
sm179=[0,-4,0,-4,0,-7,231],
sm180=[0,-4,0,-4,0,-5,2,-1,232,-42,4],
sm181=[0,-4,0,-4,0,-5,233,-1,233,-42,233],
sm182=[0,234,-3,0,-4,0,-4,234,234,234,-5,234,-37,234],
sm183=[0,235,-3,0,-4,0,-4,235,235,235,-5,235,-37,235],
sm184=[0,236,-3,0,-4,0,-4,236,236,236,-5,236,-37,236],
sm185=[0,100,-3,0,-4,0,-4,100,100,100,-5,100,-5,101,-31,100],
sm186=[0,237,-3,0,-4,0,-4,237,237,237,-4,237,237,-5,237,-31,237],
sm187=[0,238,-3,0,-4,0,-4,238,238,238,-4,238,238,-6,238,-30,238],
sm188=[0,239,-3,0,-4,0,-4,239,239,239,-4,239,239,-5,239,-31,239],
sm189=[0,240,-3,0,-4,0,-4,240,240,240,-4,240,240,-6,240,-30,240],
sm190=[0,241,-3,0,-4,0,-4,241,241,241,-4,241,241,-5,241,241,-30,241],
sm191=[0,242,-3,0,-4,0,-4,242,242,242,-4,242,242,-5,242,242,-30,242],
sm192=[0,-4,178,-4,0,-3,179,-7,243],
sm193=[0,244,-3,0,-4,0,-4,244,244,244,-4,244,244,-5,244,244,-30,244],
sm194=[0,-4,245,-4,0,-3,245,-7,245],
sm195=[0,-4,246,-4,0,-3,246,-7,246],
sm196=[0,-1,103,247,-1,0,-4,0],
sm197=[0,-1,248,248,-1,0,-4,0],
sm198=[0,-1,248,248,-1,0,-4,0,-30,249],
sm199=[0,-2,247,-1,0,-4,0],
sm200=[0,-2,250,-1,0,-4,0],
sm201=[0,-2,251,-1,0,-4,0],
sm202=[0,-2,252,-1,0,-4,0],
sm203=[0,-2,252,-1,0,-4,0,-30,253],
sm204=[0,-4,0,-4,0,-11,254,-15,254,254,254,254],
sm205=[0,-1,255,-2,0,-4,0],
sm206=[0,-4,0,-4,0,-11,256,-15,256,256,256,256],
sm207=[0,-4,197,-4,0,-3,198,-7,257],
sm208=[0,-4,258,-4,0,-3,258,-7,258],
sm209=[0,-4,259,-4,0,-3,259,-7,259],
sm210=[0,-1,200,-2,0,-4,0,-7,260,-8,201,202],
sm211=[0,-1,261,-2,0,-4,0,-7,261,-8,261,261],
sm212=[0,-4,0,-4,0,-4,262,263],
sm213=[0,-4,0,-4,0,-4,264,264],
sm214=[0,-4,0,-4,0,-4,265,265],
sm215=[0,-4,0,-4,0,-33,266],
sm216=[0,-4,0,-4,0,-7,267],
sm217=[0,-4,0,-4,0,-5,268,-5,268,-6,268],
sm218=[0,-4,0,-4,0,-5,269,-5,269,-7,269],
sm219=[0,-4,0,-4,0,-5,270,-5,270,-6,270],
sm220=[0,-4,0,-4,0,-5,271,-5,271,-7,271],
sm221=[0,-4,0,-4,0,-5,272,-5,272,-6,272,272],
sm222=[0,-4,0,-4,0,-5,273,-5,273,-6,273,273],
sm223=[0,-4,0,-4,0,-11,274],
sm224=[0,275,-3,0,-4,0,-5,275,-1,275,-4,275,-37,275],
sm225=[0,-2,276,-1,0,-4,0,-6,276,276,-4,276],
sm226=[0,-2,277,-1,0,-4,0,-6,277,277,-3,277,277],
sm227=[0,-2,278,-1,131,-4,0,-3,132,-2,278,278,-2,133,278,278,-44,278],
sm228=[0,-4,0,-4,0,-58,279],
sm229=[0,-2,280,-1,280,-4,0,-3,280,-2,280,280,-2,280,280,280,-44,280],
sm230=[0,-4,131,-4,0,-3,132,-6,133,281],
sm231=[0,-4,0,-4,0,-4,282,282,-5,282,-16,282,-13,282,282,282,-5,282],
sm232=[0,-4,0,-4,0,-51,283,-3,284,285],
sm233=[0,-4,0,-4,0,-51,286,-3,286,286],
sm234=[0,-2,287,287,0,-4,0],
sm235=[0,-4,0,-4,0,-11,288],
sm236=[0,289,-3,0,-4,0,-4,93,289,289,-5,289,-37,289],
sm237=[0,-4,0,-4,0,-11,290],
sm238=[0,-4,0,-4,0,-11,291],
sm239=[0,-4,0,-4,0,-10,108,-48,60],
sm240=[0,-4,0,-4,0,-6,292],
sm241=[0,-4,0,-4,0,-5,293,-1,293,-42,293],
sm242=[0,294,-3,0,-4,0,-4,294,294,294,-4,294,294,-5,294,294,-30,294],
sm243=[0,-4,295,-4,0,-3,295,-7,295],
sm244=[0,-4,0,-4,0,-11,296],
sm245=[0,-4,0,-4,0,-11,192],
sm246=[0,-4,0,-4,0,-11,181],
sm247=[0,-4,0,-4,0,-11,297],
sm248=[0,-1,298,298,-1,0,-4,0],
sm249=[0,-4,0,-4,0,-28,299],
sm250=[0,-4,0,-4,0,-27,300,-1,301],
sm251=[0,-2,302,-1,0,-4,0],
sm252=[0,-4,0,-4,0,-11,303,-15,303,303,303,303],
sm253=[0,-4,304,-4,0,-3,304,-7,304],
sm254=[0,-4,0,-4,0,-6,305],
sm255=[0,-1,306,-2,0,-4,0,-7,306,-8,306,306],
sm256=[0,-4,0,-4,0,-4,307,307],
sm257=[0,-4,0,-4,0,-6,308],
sm258=[0,-4,0,-4,0,-5,309,-5,309,-6,309,309],
sm259=[0,-2,310,-1,0,-4,0,-6,310,310,-3,310,310],
sm260=[0,-2,311,-1,311,-4,0,-3,311,-2,311,311,-2,311,311,311,-44,311],
sm261=[0,-4,0,-4,0,-51,312],
sm262=[0,-4,0,-4,0,-47,313,313,-1,313,313,-7,313],
sm263=[0,-4,0,-4,0,-51,314],
sm264=[0,-4,0,-4,0,-47,315,315,-1,315,315,-7,315],
sm265=[0,316,-1,316,-1,0,-4,0,-5,316,316,-3,316,-1,316,-7,316,-2,316,-26,316],
sm266=[0,-1,317,317,-1,0,-4,0,-30,318],
sm267=[0,-1,319,319,-1,0,-4,0],
sm268=[0,-2,18,-1,0,-4,0,-6,320,321,-4,3],
sm269=[0,-4,0,-4,0,-4,322,322],
sm270=[0,-4,0,-4,0,-47,323,323,-1,323,323,-7,323],
sm271=[0,-4,0,-4,0,-11,324],
sm272=[0,-1,325,325,-1,0,-4,0],
sm273=[0,-4,0,-4,0,-7,326],
sm274=[0,-1,327,-2,0,-4,0,-7,327,-8,327,327],
sm275=[0,-1,328,-2,0,-4,0,-7,328,-8,328,328],

    // Symbol Lookup map
    lu = new Map([[1,1],[2,2],[4,3],[8,4],[16,5],[32,6],[64,7],[128,8],[256,9],[512,10],[3,11],[264,11],[200,13],[",",14],["{",15],[";",16],["}",17],[null,3],["supports",19],["(",20],[")",21],["@",22],["import",23],["keyframes",24],["id",25],["from",26],["to",27],["and",28],["or",29],["not",30],["media",32],["only",33],[":",69],["<",37],[">",38],["<=",39],["=",40],["/",42],["%",43],["px",44],["in",45],["rad",46],["url",47],["\"",48],["'",49],["[",60],["]",61],["+",52],["~",53],["||",54],["*",55],["|",56],["#",57],[".",58],["^=",62],["$=",63],["*=",64],["i",65],["s",66],["!",67],["important",68]]),

    //Reverse Symbol Lookup map
    rlu = new Map([[1,1],[2,2],[3,4],[4,8],[5,16],[6,32],[7,64],[8,128],[9,256],[10,512],[11,3],[11,264],[13,200],[14,","],[15,"{"],[16,";"],[17,"}"],[3,null],[19,"supports"],[20,"("],[21,")"],[22,"@"],[23,"import"],[24,"keyframes"],[25,"id"],[26,"from"],[27,"to"],[28,"and"],[29,"or"],[30,"not"],[32,"media"],[33,"only"],[69,":"],[37,"<"],[38,">"],[39,"<="],[40,"="],[42,"/"],[43,"%"],[44,"px"],[45,"in"],[46,"rad"],[47,"url"],[48,"\""],[49,"'"],[60,"["],[61,"]"],[52,"+"],[53,"~"],[54,"||"],[55,"*"],[56,"|"],[57,"#"],[58,"."],[62,"^="],[63,"$="],[64,"*="],[65,"i"],[66,"s"],[67,"!"],[68,"important"]]),

    // States 
    state = [sm0,
sm1,
sm2,
sm2,
sm3,
sm4,
sm5,
sm6,
sm7,
sm7,
sm8,
sm9,
sm10,
sm11,
sm12,
sm13,
sm14,
sm15,
sm16,
sm17,
sm18,
sm19,
sm20,
sm21,
sm22,
sm23,
sm24,
sm9,
sm25,
sm26,
sm27,
sm28,
sm29,
sm30,
sm31,
sm32,
sm33,
sm25,
sm34,
sm35,
sm35,
sm35,
sm35,
sm36,
sm37,
sm38,
sm39,
sm40,
sm41,
sm42,
sm43,
sm44,
sm45,
sm46,
sm47,
sm47,
sm47,
sm47,
sm48,
sm49,
sm50,
sm51,
sm52,
sm53,
sm20,
sm20,
sm20,
sm54,
sm55,
sm56,
sm57,
sm57,
sm58,
sm59,
sm60,
sm61,
sm62,
sm63,
sm64,
sm65,
sm66,
sm66,
sm67,
sm67,
sm68,
sm69,
sm70,
sm71,
sm71,
sm72,
sm73,
sm74,
sm75,
sm75,
sm76,
sm77,
sm78,
sm79,
sm80,
sm80,
sm81,
sm81,
sm82,
sm83,
sm84,
sm85,
sm86,
sm87,
sm88,
sm89,
sm90,
sm91,
sm92,
sm93,
sm94,
sm95,
sm96,
sm97,
sm98,
sm99,
sm98,
sm100,
sm98,
sm101,
sm102,
sm103,
sm104,
sm105,
sm106,
sm107,
sm108,
sm109,
sm110,
sm111,
sm112,
sm113,
sm114,
sm115,
sm116,
sm117,
sm118,
sm119,
sm120,
sm121,
sm122,
sm123,
sm124,
sm125,
sm126,
sm127,
sm128,
sm129,
sm22,
sm130,
sm131,
sm132,
sm133,
sm134,
sm135,
sm136,
sm69,
sm137,
sm69,
sm138,
sm139,
sm140,
sm141,
sm69,
sm142,
sm142,
sm142,
sm143,
sm144,
sm145,
sm146,
sm146,
sm147,
sm148,
sm129,
sm149,
sm150,
sm151,
sm152,
sm77,
sm153,
sm77,
sm154,
sm155,
sm156,
sm25,
sm157,
sm158,
sm158,
sm159,
sm160,
sm161,
sm162,
sm93,
sm163,
sm164,
sm164,
sm165,
sm166,
sm166,
sm166,
sm167,
sm168,
sm169,
sm170,
sm170,
sm170,
sm170,
sm171,
sm25,
sm172,
sm173,
sm174,
sm174,
sm175,
sm176,
sm177,
sm176,
sm178,
sm179,
sm180,
sm181,
sm182,
sm183,
sm184,
sm185,
sm186,
sm187,
sm188,
sm189,
sm190,
sm191,
sm192,
sm193,
sm194,
sm195,
sm195,
sm196,
sm196,
sm197,
sm198,
sm197,
sm197,
sm199,
sm200,
sm201,
sm202,
sm203,
sm202,
sm202,
sm204,
sm205,
sm206,
sm206,
sm206,
sm207,
sm193,
sm208,
sm209,
sm209,
sm210,
sm211,
sm212,
sm213,
sm214,
sm214,
sm214,
sm215,
sm216,
sm217,
sm218,
sm219,
sm220,
sm221,
sm222,
sm223,
sm224,
sm225,
sm226,
sm227,
sm228,
sm229,
sm230,
sm231,
sm232,
sm233,
sm233,
sm234,
sm235,
sm236,
sm237,
sm238,
sm238,
sm239,
sm240,
sm241,
sm242,
sm243,
sm244,
sm245,
sm246,
sm247,
sm248,
sm247,
sm249,
sm250,
sm251,
sm252,
sm242,
sm253,
sm254,
sm255,
sm9,
sm148,
sm256,
sm257,
sm258,
sm259,
sm260,
sm261,
sm262,
sm263,
sm263,
sm264,
sm265,
sm196,
sm266,
sm196,
sm267,
sm267,
sm268,
sm269,
sm270,
sm271,
sm272,
sm271,
sm273,
sm274,
sm275],

/************ Functions *************/

    max = Math.max, min = Math.min,

    //Error Functions
    e = (tk,r,o,l,p)=>{if(l.END)l.throw("Unexpected end of input");else if(l.ty & (264)) l.throw(`Unexpected space character within input "${1}" `) ; else l.throw(`Unexpected token ${l.tx} within input "${111}" `)}, 
    eh = [e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e],

    //Empty Function
    nf = ()=>-1, 

    //Environment Functions
    
redv = (ret, fn, plen, ln, t, e, o, l, s) => {        ln = max(o.length - plen, 0);        o[ln] = fn(o.slice(-plen), e, l, s, o, plen);        o.length = ln + 1;        return ret;    },
rednv = (ret, Fn, plen, ln, t, e, o, l, s) => {        ln = max(o.length - plen, 0);        o[ln] = new Fn(o.slice(-plen), e, l, s, o, plen);        o.length = ln + 1;        return ret;    },
redn = (ret, plen, t, e, o, l, s) => {        if(plen > 0){            let ln = max(o.length - plen, 0);            o[ln] = o[o.length -1];            o.length = ln + 1;        }        return ret;    },
shftf = (ret, fn, t, e, o, l, s) => (fn(o, e, l, s), ret),
R20_STYLE_SHEET201_group_list=function (sym,env,lex,state,output,len) {return (sym[0].push(sym[1]),sym[0])},
R21_STYLE_SHEET201_group_list=function (sym,env,lex,state,output,len) {return [sym[0]]},
R60_COMPLEX_SELECTOR_list=function (sym,env,lex,state,output,len) {return (sym[0].push(sym[2]),sym[0])},
C70_RULE_SET=function (sym,env,lex,state,output,len) {this.selectors = sym[0];this.body = sym[2];},
C180_keyframes=function (sym,env,lex,state,output,len) {this.keyframes = sym[4];},
C210_keyframes_blocks=function (sym,env,lex,state,output,len) {this.selectors = sym[0];this.props = sym[2].props;},
R510_general_enclosed6202_group_list=function (sym,env,lex,state,output,len) {return sym[0] + sym[1]},
R511_general_enclosed6202_group_list=function (sym,env,lex,state,output,len) {return sym[0] + ""},
R800_COMPLEX_SELECTOR=function (sym,env,lex,state,output,len) {return len > 1 ? [sym[0]].concat(sym[1]) : [sym[0]]},
R1050_declaration_list=function (sym,env,lex,state,output,len) {return {[props] : sym[0],[at_rules] : []}},
R1051_declaration_list=function (sym,env,lex,state,output,len) {return {[props] : [],[at_rules] : [sym[0]]}},
R1052_declaration_list=function (sym,env,lex,state,output,len) {return (sym[0].at_rules.push(sym[1]),sym[0])},
R1053_declaration_list=function (sym,env,lex,state,output,len) {return (sym[0].props.push(...sym[1]),sym[0])},
R1100_declaration_values=function (sym,env,lex,state,output,len) {return sym.join("")},

    //Sparse Map Lookup
    lsm = (index, map) => {    if (map[0] == 0xFFFFFFFF) return map[index+1];    for (let i = 1, ind = 0, l = map.length, n = 0; i < l && ind <= index; i++) {        if (ind !== index) {            if ((n = map[i]) > -1) ind++;            else ind += -n;        } else return map[i];    }    return -1;},

    //State Action Functions
    state_funct = [(...v)=>((redn(5123,0,...v))),
()=>(46),
()=>(26),
()=>(58),
(...v)=>(redn(5,1,...v)),
(...v)=>(redn(5127,1,...v)),
(...v)=>(redv(2055,R21_STYLE_SHEET201_group_list,1,0,...v)),
(...v)=>(redn(1031,1,...v)),
()=>(90),
()=>(106),
()=>(94),
()=>(102),
()=>(98),
(...v)=>(redv(4103,R21_STYLE_SHEET201_group_list,1,0,...v)),
(...v)=>(redn(3079,1,...v)),
()=>(114),
()=>(110),
()=>(138),
(...v)=>(redv(6151,R21_STYLE_SHEET201_group_list,1,0,...v)),
(...v)=>(redv(81927,R800_COMPLEX_SELECTOR,1,0,...v)),
()=>(158),
()=>(162),
()=>(166),
()=>(170),
()=>(202),
()=>(198),
()=>(210),
()=>(234),
()=>(238),
()=>(242),
()=>(186),
()=>(246),
()=>(258),
()=>(262),
()=>(266),
(...v)=>(redn(5131,2,...v)),
(...v)=>(redv(2059,R20_STYLE_SHEET201_group_list,2,0,...v)),
(...v)=>(redv(4107,R20_STYLE_SHEET201_group_list,2,0,...v)),
(...v)=>(redn(10251,2,...v)),
()=>(278),
()=>(298),
()=>(290),
()=>(294),
()=>(358),
()=>(346),
()=>(342),
()=>(362),
()=>(370),
()=>(414),
()=>(410),
()=>(390),
()=>(382),
()=>(426),
()=>(430),
(...v)=>(redv(107527,R1050_declaration_list,1,0,...v)),
()=>(450),
(...v)=>(redv(107527,R1051_declaration_list,1,0,...v)),
(...v)=>(redv(104455,R21_STYLE_SHEET201_group_list,1,0,...v)),
(...v)=>(redn(103431,1,...v)),
()=>(454),
(...v)=>(redv(81931,R800_COMPLEX_SELECTOR,2,0,...v)),
(...v)=>(redv(80903,R21_STYLE_SHEET201_group_list,1,0,...v)),
(...v)=>(redv(79879,fn.comboSelector,1,0,...v)),
(...v)=>(redn(88071,1,...v)),
()=>(474),
()=>(482),
()=>(490),
()=>(498),
(...v)=>(rednv(87051,fn.compoundSelector,2,0,...v)),
(...v)=>(rednv(89095,fn.selector,1,0,...v)),
()=>(506),
()=>(502),
(...v)=>(redn(90119,1,...v)),
(...v)=>(redn(92167,1,...v)),
()=>(510),
(...v)=>(redn(91143,1,...v)),
(...v)=>(redv(82951,R21_STYLE_SHEET201_group_list,1,0,...v)),
(...v)=>(redn(93191,1,...v)),
()=>(514),
()=>(518),
()=>(530),
()=>(534),
()=>(542),
(...v)=>(redv(86023,R21_STYLE_SHEET201_group_list,1,0,...v)),
(...v)=>(redn(84999,1,...v)),
()=>(558),
(...v)=>(redn(16399,3,...v)),
()=>(570),
(...v)=>(redv(11271,R21_STYLE_SHEET201_group_list,1,0,...v)),
(...v)=>(redn(12295,1,...v)),
()=>(582),
()=>(594),
()=>(610),
()=>(606),
(...v)=>(redv(33799,R21_STYLE_SHEET201_group_list,1,0,...v)),
(...v)=>(redn(37895,1,...v)),
()=>(618),
()=>(626),
(...v)=>(redn(39943,1,...v)),
(...v)=>(redn(38919,1,...v)),
()=>(642),
()=>(650),
()=>(694),
()=>(666),
()=>(670),
(...v)=>(redn(48135,1,...v)),
(...v)=>(redn(67591,1,...v)),
()=>(706),
(...v)=>(redn(35847,1,...v)),
()=>(710),
(...v)=>(redn(19463,1,...v)),
()=>(714),
(...v)=>(redn(28679,1,...v)),
()=>(734),
()=>(742),
()=>(754),
(...v)=>(redn(29703,1,...v)),
(...v)=>(redn(30727,1,...v)),
()=>(758),
()=>(762),
()=>(766),
(...v)=>(redv(6159,R60_COMPLEX_SELECTOR_list,3,0,...v)),
()=>(770),
(...v)=>(rednv(7183,C70_RULE_SET,3,0,...v)),
(...v)=>(redv(107531,R1052_declaration_list,2,0,...v)),
(...v)=>(redv(107531,R1053_declaration_list,2,0,...v)),
()=>(774),
(...v)=>(redv(106503,R21_STYLE_SHEET201_group_list,1,0,...v)),
(...v)=>(redn(105479,1,...v)),
(...v)=>(redv(107531,R1050_declaration_list,2,0,...v)),
()=>(798),
()=>(802),
()=>(790),
(...v)=>(redv(80907,R20_STYLE_SHEET201_group_list,2,0,...v)),
(...v)=>(redv(79883,fn.comboSelector,2,0,...v)),
()=>(810),
()=>(814),
(...v)=>(rednv(87055,fn.compoundSelector,3,0,...v)),
()=>(818),
(...v)=>(redv(82955,R20_STYLE_SHEET201_group_list,2,0,...v)),
(...v)=>(redv(86027,R20_STYLE_SHEET201_group_list,2,0,...v)),
(...v)=>(rednv(89099,fn.selector,2,0,...v)),
(...v)=>(redn(92171,2,...v)),
(...v)=>(redn(91147,2,...v)),
(...v)=>(rednv(94219,fn.idSelector,2,0,...v)),
(...v)=>(rednv(95243,fn.classSelector,2,0,...v)),
()=>(846),
()=>(830),
()=>(822),
()=>(834),
()=>(838),
()=>(842),
()=>(854),
(...v)=>(rednv(101387,fn.pseudoClassSelector,2,0,...v)),
(...v)=>(rednv(102411,fn.pseudoElementSelector,2,0,...v)),
(...v)=>(redn(85003,2,...v)),
(...v)=>(redv(83975,R21_STYLE_SHEET201_group_list,1,0,...v)),
(...v)=>(redn(16403,4,...v)),
(...v)=>(redv(11275,R20_STYLE_SHEET201_group_list,2,0,...v)),
()=>(874),
()=>(878),
(...v)=>(redv(75783,R511_general_enclosed6202_group_list,1,0,...v)),
(...v)=>(redn(74759,1,...v)),
()=>(886),
(...v)=>(redv(77831,R511_general_enclosed6202_group_list,1,0,...v)),
(...v)=>(redn(76807,1,...v)),
(...v)=>(redn(73739,2,...v)),
(...v)=>(redn(72711,1,...v)),
(...v)=>((redn(9219,0,...v))),
(...v)=>(redn(37899,2,...v)),
(...v)=>(redn(44043,2,...v)),
(...v)=>(redn(47115,2,...v)),
(...v)=>(redv(43015,R21_STYLE_SHEET201_group_list,1,0,...v)),
(...v)=>(redv(46087,R21_STYLE_SHEET201_group_list,1,0,...v)),
(...v)=>(redn(40971,2,...v)),
()=>(938),
()=>(942),
()=>(962),
()=>(958),
()=>(950),
(...v)=>(redn(66567,1,...v)),
(...v)=>(redn(49159,1,...v)),
()=>(974),
()=>(978),
()=>(982),
()=>(986),
()=>(966),
()=>(1002),
()=>(1006),
()=>(1010),
()=>(1014),
(...v)=>(redn(64519,1,...v)),
()=>(1022),
()=>(1026),
()=>(1030),
()=>(1034),
()=>(1054),
()=>(1050),
()=>(1042),
()=>(1086),
()=>(1074),
()=>(1078),
(...v)=>(redn(28683,2,...v)),
(...v)=>(redv(25607,R21_STYLE_SHEET201_group_list,1,0,...v)),
(...v)=>(redv(27655,R21_STYLE_SHEET201_group_list,1,0,...v)),
()=>(1110),
()=>(1114),
()=>(1122),
(...v)=>(rednv(7187,C70_RULE_SET,4,0,...v)),
(...v)=>(redv(107535,R1053_declaration_list,3,0,...v)),
(...v)=>(redv(104463,R60_COMPLEX_SELECTOR_list,3,0,...v)),
(...v)=>(redv(109583,fn.parseDeclaration,3,0,...v)),
()=>(1138),
(...v)=>(redn(112647,1,...v)),
(...v)=>(redv(111623,R511_general_enclosed6202_group_list,1,0,...v)),
(...v)=>(redn(110599,1,...v)),
()=>(1150),
(...v)=>(rednv(87059,fn.compoundSelector,4,0,...v)),
(...v)=>(rednv(97295,fn.attribSelector,3,0,...v)),
()=>(1158),
()=>(1162),
()=>(1166),
(...v)=>(redn(98311,1,...v)),
(...v)=>(rednv(101391,fn.pseudoClassSelector,3,0,...v)),
(...v)=>(redv(83979,R20_STYLE_SHEET201_group_list,2,0,...v)),
(...v)=>(redn(16407,5,...v)),
()=>(1190),
(...v)=>(redn(78863,3,...v)),
(...v)=>(redv(75787,R510_general_enclosed6202_group_list,2,0,...v)),
(...v)=>(redv(77835,R510_general_enclosed6202_group_list,2,0,...v)),
()=>(1194),
(...v)=>(redn(9223,1,...v)),
(...v)=>(redv(8199,R21_STYLE_SHEET201_group_list,1,0,...v)),
(...v)=>(redv(33807,R60_COMPLEX_SELECTOR_list,3,0,...v)),
(...v)=>(redn(37903,3,...v)),
(...v)=>(redn(36875,2,...v)),
(...v)=>(redv(43019,R20_STYLE_SHEET201_group_list,2,0,...v)),
(...v)=>(redv(46091,R20_STYLE_SHEET201_group_list,2,0,...v)),
(...v)=>(redn(41995,2,...v)),
(...v)=>(redn(45067,2,...v)),
(...v)=>(redn(48143,3,...v)),
(...v)=>(redn(50191,3,...v)),
()=>(1202),
(...v)=>(redn(55311,3,...v)),
(...v)=>(redv(54279,R511_general_enclosed6202_group_list,1,0,...v)),
(...v)=>(redn(53255,1,...v)),
()=>(1218),
(...v)=>(redn(57351,1,...v)),
()=>(1226),
()=>(1234),
()=>(1238),
(...v)=>(redn(58375,1,...v)),
()=>(1242),
(...v)=>(redn(71691,2,...v)),
()=>(1246),
(...v)=>(redn(70663,1,...v)),
()=>(1250),
(...v)=>(redv(52231,R511_general_enclosed6202_group_list,1,0,...v)),
(...v)=>(redn(51207,1,...v)),
()=>(1258),
(...v)=>(redv(17415,R21_STYLE_SHEET201_group_list,1,0,...v)),
()=>(1270),
()=>(1266),
(...v)=>(redv(20487,R21_STYLE_SHEET201_group_list,1,0,...v)),
(...v)=>(redn(22535,1,...v)),
()=>(1274),
()=>(1278),
(...v)=>(redv(25611,R20_STYLE_SHEET201_group_list,2,0,...v)),
(...v)=>(redv(27659,R20_STYLE_SHEET201_group_list,2,0,...v)),
(...v)=>(redn(24587,2,...v)),
(...v)=>(redn(26635,2,...v)),
(...v)=>(redn(29711,3,...v)),
(...v)=>(redn(31759,3,...v)),
()=>(1282),
(...v)=>(rednv(7191,C70_RULE_SET,5,0,...v)),
(...v)=>(redv(106511,R60_COMPLEX_SELECTOR_list,3,0,...v)),
(...v)=>(redv(109587,fn.parseDeclaration,4,0,...v)),
(...v)=>(redv(112651,R1100_declaration_values,2,0,...v)),
()=>(1286),
(...v)=>(redv(111627,R510_general_enclosed6202_group_list,2,0,...v)),
()=>(1290),
(...v)=>(rednv(87063,fn.compoundSelector,5,0,...v)),
()=>(1298),
()=>(1302),
()=>(1306),
(...v)=>(redn(96263,1,...v)),
(...v)=>(redn(98315,2,...v)),
()=>(1310),
(...v)=>(redn(16411,6,...v)),
()=>(1314),
(...v)=>(redn(13319,1,...v)),
(...v)=>(redn(34843,6,...v)),
(...v)=>(redv(8203,R20_STYLE_SHEET201_group_list,2,0,...v)),
(...v)=>(redn(55315,4,...v)),
(...v)=>(redv(54283,R510_general_enclosed6202_group_list,2,0,...v)),
(...v)=>(redn(56335,3,...v)),
(...v)=>(redn(63503,3,...v)),
(...v)=>(redn(57355,2,...v)),
()=>(1322),
()=>(1330),
()=>(1334),
(...v)=>(redn(58379,2,...v)),
(...v)=>(redn(68623,3,...v)),
(...v)=>(redv(52235,R510_general_enclosed6202_group_list,2,0,...v)),
(...v)=>(rednv(18459,C180_keyframes,6,0,...v)),
(...v)=>(redv(17419,R20_STYLE_SHEET201_group_list,2,0,...v)),
(...v)=>(redn(69643,2,...v)),
(...v)=>(redn(23579,6,...v)),
(...v)=>(redn(32787,4,...v)),
(...v)=>(redn(108555,2,...v)),
(...v)=>(redv(112655,R1100_declaration_values,3,0,...v)),
()=>(1346),
(...v)=>(rednv(97303,fn.attribSelector,5,0,...v)),
(...v)=>(redn(99335,1,...v)),
(...v)=>(redn(100367,3,...v)),
(...v)=>(redn(14355,4,...v)),
(...v)=>(redn(60423,1,...v)),
()=>(1354),
(...v)=>(redn(62471,1,...v)),
()=>(1362),
()=>(1366),
(...v)=>(redv(20495,R60_COMPLEX_SELECTOR_list,3,0,...v)),
(...v)=>(rednv(97307,fn.attribSelector,6,0,...v)),
(...v)=>(redn(63511,5,...v)),
(...v)=>(redn(60427,2,...v)),
()=>(1370),
(...v)=>(rednv(21523,C210_keyframes_blocks,4,0,...v)),
(...v)=>(rednv(21527,C210_keyframes_blocks,5,0,...v))],

    //Goto Lookup Functions
    goto = [v=>lsm(v,gt0),
nf,
v=>lsm(v,gt1),
v=>lsm(v,gt2),
nf,
nf,
nf,
nf,
nf,
nf,
nf,
v=>lsm(v,gt3),
nf,
v=>lsm(v,gt4),
v=>lsm(v,gt5),
nf,
nf,
nf,
v=>lsm(v,gt2),
nf,
nf,
nf,
nf,
v=>lsm(v,gt6),
v=>lsm(v,gt7),
v=>lsm(v,gt8),
v=>lsm(v,gt9),
v=>lsm(v,gt10),
v=>lsm(v,gt11),
v=>lsm(v,gt12),
nf,
nf,
nf,
nf,
nf,
v=>lsm(v,gt13),
nf,
v=>lsm(v,gt14),
nf,
nf,
nf,
nf,
nf,
v=>lsm(v,gt15),
v=>lsm(v,gt16),
v=>lsm(v,gt17),
nf,
nf,
nf,
nf,
nf,
nf,
nf,
nf,
nf,
nf,
nf,
nf,
nf,
nf,
v=>lsm(v,gt18),
v=>lsm(v,gt19),
nf,
v=>lsm(v,gt20),
nf,
nf,
nf,
v=>lsm(v,gt21),
v=>lsm(v,gt22),
nf,
nf,
nf,
v=>lsm(v,gt23),
v=>lsm(v,gt24),
v=>lsm(v,gt25),
nf,
nf,
nf,
v=>lsm(v,gt26),
v=>lsm(v,gt27),
nf,
nf,
nf,
nf,
v=>lsm(v,gt28),
v=>lsm(v,gt29),
v=>lsm(v,gt30),
nf,
nf,
nf,
nf,
nf,
nf,
nf,
nf,
v=>lsm(v,gt31),
v=>lsm(v,gt32),
v=>lsm(v,gt33),
nf,
nf,
nf,
nf,
nf,
nf,
v=>lsm(v,gt12),
nf,
nf,
nf,
nf,
nf,
nf,
nf,
v=>lsm(v,gt34),
v=>lsm(v,gt35),
nf,
nf,
v=>lsm(v,gt36),
v=>lsm(v,gt17),
nf,
v=>lsm(v,gt17),
nf,
nf,
nf,
nf,
v=>lsm(v,gt19),
nf,
nf,
nf,
nf,
nf,
v=>lsm(v,gt37),
nf,
nf,
v=>lsm(v,gt38),
nf,
nf,
v=>lsm(v,gt39),
nf,
v=>lsm(v,gt40),
nf,
v=>lsm(v,gt41),
nf,
nf,
v=>lsm(v,gt42),
nf,
nf,
v=>lsm(v,gt43),
nf,
nf,
nf,
nf,
v=>lsm(v,gt44),
v=>lsm(v,gt45),
v=>lsm(v,gt46),
nf,
nf,
v=>lsm(v,gt47),
v=>lsm(v,gt48),
v=>lsm(v,gt49),
nf,
v=>lsm(v,gt50),
nf,
v=>lsm(v,gt51),
nf,
nf,
nf,
v=>lsm(v,gt52),
v=>lsm(v,gt29),
nf,
nf,
nf,
v=>lsm(v,gt53),
v=>lsm(v,gt54),
v=>lsm(v,gt55),
nf,
nf,
v=>lsm(v,gt56),
v=>lsm(v,gt57),
v=>lsm(v,gt58),
nf,
v=>lsm(v,gt59),
v=>lsm(v,gt60),
nf,
v=>lsm(v,gt61),
nf,
v=>lsm(v,gt62),
nf,
nf,
v=>lsm(v,gt52),
v=>lsm(v,gt63),
nf,
nf,
nf,
v=>lsm(v,gt64),
nf,
v=>lsm(v,gt65),
v=>lsm(v,gt66),
v=>lsm(v,gt67),
nf,
nf,
nf,
v=>lsm(v,gt17),
nf,
nf,
nf,
nf,
v=>lsm(v,gt68),
nf,
nf,
nf,
nf,
nf,
nf,
v=>lsm(v,gt69),
nf,
v=>lsm(v,gt70),
nf,
nf,
v=>lsm(v,gt71),
nf,
nf,
nf,
nf,
nf,
v=>lsm(v,gt72),
nf,
nf,
nf,
nf,
v=>lsm(v,gt73),
nf,
nf,
nf,
nf,
nf,
nf,
v=>lsm(v,gt74),
nf,
nf,
nf,
nf,
v=>lsm(v,gt75),
v=>lsm(v,gt76),
nf,
nf,
nf,
nf,
v=>lsm(v,gt77),
nf,
nf,
nf,
nf,
nf,
nf,
nf,
nf,
nf,
nf,
nf,
v=>lsm(v,gt78),
nf,
nf,
nf,
nf,
v=>lsm(v,gt79),
nf,
nf,
nf,
nf,
nf,
nf,
nf,
nf,
nf,
nf,
nf,
nf,
nf,
nf,
nf,
nf,
nf,
nf,
v=>lsm(v,gt80),
nf,
nf,
v=>lsm(v,gt80),
nf,
v=>lsm(v,gt81),
nf,
nf,
nf,
nf,
nf,
nf,
nf,
nf,
nf,
nf,
nf,
nf,
nf,
nf,
nf,
nf,
nf,
nf,
nf,
v=>lsm(v,gt82),
v=>lsm(v,gt83),
nf,
nf,
nf,
nf,
nf,
nf,
v=>lsm(v,gt84),
v=>lsm(v,gt85),
nf,
nf,
nf,
nf,
nf,
nf,
nf,
nf,
nf,
nf,
nf,
v=>lsm(v,gt86),
nf,
v=>lsm(v,gt87),
nf,
nf,
v=>lsm(v,gt12),
nf,
nf,
nf,
nf,
nf,
nf,
nf,
nf];

function getToken(l, SYM_LU) {
    if (l.END) return 0; /*3*/

    switch (l.ty) {
        case 2:
            if (SYM_LU.has(l.tx)) return SYM_LU.get(l.tx);
            return 2;
        case 1:
            return 1;
        case 4:
            return 3;
        case 256:
            return 9;
        case 8:
            return 4;
        case 512:
            return 10;
        default:
            return SYM_LU.get(l.tx) || SYM_LU.get(l.ty);
    }
}

/************ Parser *************/

function parser(l, e = {}) {
    
    fn = e.functions;

    l.IWS = false;
    l.PARSE_STRING = true;

    if (symbols.length > 0) {
        symbols.forEach(s => { l.addSymbol(s) });
        l.tl = 0;
        l.next();
    }

    const o = [],
        ss = [0, 0];

    let time = 1000000,
        RECOVERING = 100,
        tk = getToken(l, lu),
        p = l.copy(),
        sp = 1,
        len = 0,
        off = 0;

    outer:

        while (time-- > 0) {

            const fn = lsm(tk, state[ss[sp]]) || 0;

            /*@*/// console.log({end:l.END, state:ss[sp], tx:l.tx, ty:l.ty, tk:tk, rev:rlu.get(tk), s_map:state[ss[sp]], res:lsm(tk, state[ss[sp]])});

            let r,
                gt = -1;

            if (fn == 0) {
                /*Ignore the token*/
                l.next();
                tk = getToken(l, lu);
                continue;
            }

            if (fn > 0) {
                r = state_funct[fn - 1](tk, e, o, l, ss[sp - 1]);
            } else {
                if (RECOVERING > 1 && !l.END) {
                    if (tk !== lu.get(l.ty)) {
                        //console.log("ABLE", rlu.get(tk), l.tx, tk )
                        tk = lu.get(l.ty);
                        continue;
                    }

                    if (tk !== 13) {
                        //console.log("MABLE")
                        tk = 13;
                        RECOVERING = 1;
                        continue;
                    }
                }

                tk = getToken(l, lu);

                const recovery_token = eh[ss[sp]](tk, e, o, l, p, ss[sp], lu);

                if (RECOVERING > 0 && recovery_token) {
                    RECOVERING = -1; /* To prevent infinite recursion */
                    tk = recovery_token;
                    l.tl = 0; /*reset current token */
                    continue;
                }
            }

            switch (r & 3) {
                case 0:
                    /* ERROR */

                    if (tk == "$eof")
                        l.throw("Unexpected end of input");
                    l.throw(`Unexpected token [${RECOVERING ? l.next().tx : l.tx}]`);
                    return [null];

                case 1:
                    /* ACCEPT */
                    break outer;

                case 2:
                    /*SHIFT */
                    o.push(l.tx);
                    ss.push(off, r >> 2);
                    sp += 2;
                    p.sync(l);
                    l.next();
                    off = l.off;
                    tk = getToken(l, lu);
                    RECOVERING++;
                    break;

                case 3:
                    /* REDUCE */

                    len = (r & 0x3FC) >> 1;

                    ss.length -= len;
                    sp -= len;
                    gt = goto[ss[sp]](r >> 10);

                    if (gt < 0)
                        l.throw("Invalid state reached!");

                    ss.push(off, gt);
                    sp += 2;
                    break;
            }
        }
    return o[0];
}; export default parser;