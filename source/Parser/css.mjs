let fn = {}; const 
/************** Maps **************/

    /* Symbols To Inject into the Lexer */
    symbols = ["||","^=","$=","*=","<="],

    /* Goto lookup maps */
    gt0 = [0,-1,2,6,3,1,9,7,-2,8,-5,4,-1,33,-4,34,-10,32,-42,10,13,-1,30,14,11,-1,12,19,16,15,21,22,23,-1,24,-3,25,31],
gt1 = [0,-2,6,35,-1,9,7,-2,8,-5,36,-1,33,-4,34,-10,32,-42,10,13,-1,30,14,11,-1,12,19,16,15,21,22,23,-1,24,-3,25,31],
gt2 = [0,-2,37,-2,9,7,-2,8,-5,38,-1,33,-4,34,-10,32,-42,10,13,-1,30,14,11,-1,12,19,16,15,21,22,23,-1,24,-3,25,31],
gt3 = [0,-74,47,46,-1,13,-1,30,14,49,48,12,19,16,15,21,22,23,-1,24,-3,25,31],
gt4 = [0,-77,54,-1,30,55,-6,21,22,23,-1,24,-3,25,31],
gt5 = [0,-79,30,56,-6,57,22,23,-1,24,-3,25,31],
gt6 = [0,-79,58,-16,31],
gt7 = [0,-84,19,66,65],
gt8 = [0,-95,69],
gt9 = [0,-78,71,-16,72],
gt10 = [0,-10,76,77,-58,80,-2,79],
gt11 = [0,-32,84,-1,87,-1,85,89,86,91,-2,92,-2,90,93,-1,96,-4,97,-11,88],
gt12 = [0,-18,100,-54,102],
gt13 = [0,-27,103,105,107,110,109,-21,108],
gt14 = [0,-9,115,-5,38,-1,33,-4,34,-10,32,-63,116,114,-2,113,-3,117],
gt15 = [0,-76,119,13,-1,30,14,11,-1,12,19,16,15,21,22,23,-1,24,-3,25,31],
gt16 = [0,-74,120,-2,13,-1,30,14,49,48,12,19,16,15,21,22,23,-1,24,-3,25,31],
gt17 = [0,-77,13,-1,30,14,121,-1,12,19,16,15,21,22,23,-1,24,-3,25,31],
gt18 = [0,-79,30,122,-6,57,22,23,-1,24,-3,25,31],
gt19 = [0,-92,124],
gt20 = [0,-94,130],
gt21 = [0,-95,132],
gt22 = [0,-11,133,-58,80,-2,79],
gt23 = [0,-13,135,-18,136,-1,87,-1,85,89,86,91,-2,92,-2,90,93,-1,96,-4,97,-11,88],
gt24 = [0,-72,139],
gt25 = [0,-72,141],
gt26 = [0,-65,145],
gt27 = [0,-35,147],
gt28 = [0,-40,151,149,-1,153,150],
gt29 = [0,-46,155,-1,96,-4,97],
gt30 = [0,-37,89,156,91,-2,92,-2,90,93,157,96,-4,97,160,-6,162,164,161,163,-1,167,-2,166],
gt31 = [0,-28,171,107,110,109,-21,108],
gt32 = [0,-23,174,172,176,173],
gt33 = [0,-27,178,105,107,110,109,-21,108,-51,179],
gt34 = [0,-9,183,-5,38,-1,33,-4,34,-10,32,-65,185,184,-4,186],
gt35 = [0,-90,189],
gt36 = [0,-76,193,13,-1,30,14,11,-1,12,19,16,15,21,22,23,-1,24,-3,25,31],
gt37 = [0,-13,194,-18,195,-1,87,-1,85,89,86,91,-2,92,-2,90,93,-1,96,-4,97,-11,88],
gt38 = [0,-32,197,-1,87,-1,85,89,86,91,-2,92,-2,90,93,-1,96,-4,97,-11,88],
gt39 = [0,-73,204],
gt40 = [0,-5,9,207,206,205,-67,10,13,-1,30,14,11,-1,12,19,16,15,21,22,23,-1,24,-3,25,31],
gt41 = [0,-34,87,-1,208,89,86,91,-2,92,-2,90,93,-1,96,-4,97,-11,88],
gt42 = [0,-35,209],
gt43 = [0,-37,210,-1,91,-2,92,-3,211,-1,96,-4,97],
gt44 = [0,-40,212],
gt45 = [0,-43,213],
gt46 = [0,-46,214,-1,96,-4,97],
gt47 = [0,-46,215,-1,96,-4,97],
gt48 = [0,-51,220,218],
gt49 = [0,-55,224],
gt50 = [0,-56,229,230,-1,231],
gt51 = [0,-68,236],
gt52 = [0,-49,243,241],
gt53 = [0,-16,246,-2,248,247,249,-45,252],
gt54 = [0,-5,9,207,206,254,-67,10,13,-1,30,14,11,-1,12,19,16,15,21,22,23,-1,24,-3,25,31],
gt55 = [0,-23,255],
gt56 = [0,-25,256],
gt57 = [0,-28,257,107,110,109,-21,108],
gt58 = [0,-28,258,107,110,109,-21,108],
gt59 = [0,-76,261,13,-1,30,14,11,-1,12,19,16,15,21,22,23,-1,24,-3,25,31],
gt60 = [0,-97,263,-7,117],
gt61 = [0,-102,265,264],
gt62 = [0,-93,268],
gt63 = [0,-32,273,-1,87,-1,85,89,86,91,-2,92,-2,90,93,-1,96,-4,97,-11,88],
gt64 = [0,-12,277,-14,278,105,107,110,109,-21,108,-51,279],
gt65 = [0,-5,9,283,-69,10,13,-1,30,14,11,-1,12,19,16,15,21,22,23,-1,24,-3,25,31],
gt66 = [0,-40,151,149],
gt67 = [0,-51,285],
gt68 = [0,-62,286,-1,287,-1,167,-2,166],
gt69 = [0,-62,289,-1,287,-1,167,-2,166],
gt70 = [0,-64,291],
gt71 = [0,-49,297],
gt72 = [0,-19,248,299,249,-45,252],
gt73 = [0,-99,305,-5,186],
gt74 = [0,-102,307,-1,306],
gt75 = [0,-58,312],
gt76 = [0,-60,314],
gt77 = [0,-9,115,-5,38,-1,33,-4,34,-10,32,-63,116,114,-2,317,-3,117],
gt78 = [0,-21,318,-45,252],
gt79 = [0,-62,320,-1,287,-1,167,-2,166],
gt80 = [0,-62,322,-1,287,-1,167,-2,166],

    // State action lookup maps
    sm0=[0,1,-1,2,-1,0,-4,0,-12,3,-30,4,5,6,7,-1,8,-8,9],
sm1=[0,10,-3,0,-4,0],
sm2=[0,11,-1,2,-1,0,-4,0,-12,3,-30,4,5,6,7,-1,8,-8,9],
sm3=[0,12,-1,12,-1,0,-4,0,-7,13,-4,12,-30,12,12,12,12,-1,12,-8,12],
sm4=[0,-4,0,-4,0,-9,14,-3,15,16,-7,17],
sm5=[0,18,-1,18,-1,0,-4,0,-12,18,-30,18,18,18,18,-1,18,-8,18],
sm6=[0,19,-1,19,-1,0,-4,0,-12,19,-30,19,19,19,19,-1,19,-8,19],
sm7=[0,-4,0,-4,0,-4,20,21],
sm8=[0,-4,0,-4,0,-4,22,22],
sm9=[0,-2,2,-1,0,-4,0,-4,23,23,-5,23,-16,24,-11,25,26,27,4,5,6,7,-1,8,-8,9],
sm10=[0,-2,28,-1,0,-4,0,-4,28,28,-5,28,-16,28,-11,28,28,28,28,28,6,7,-1,8,-8,9],
sm11=[0,-2,28,-1,0,-4,0,-4,28,28,-5,28,-16,28,-11,28,28,28,28,28,28,28,-1,28,-8,29],
sm12=[0,-2,30,-1,0,-4,0,-4,30,30,-5,30,-16,30,-11,30,30,30,30,30,30,30,-1,30,-8,30],
sm13=[0,-2,31,-1,0,-4,0,-43,32],
sm14=[0,-2,30,-1,0,-4,0,-4,30,30,-5,30,-16,30,-11,30,30,30,30,33,30,30,-1,30,-8,30],
sm15=[0,-2,34,-1,0,-4,0,-4,34,34,-5,34,-16,34,-1,34,-9,34,34,34,34,33,34,34,-1,34,34,34,34,34,-4,34],
sm16=[0,-4,0,-4,0,-44,35],
sm17=[0,-2,36,-1,0,-4,0,-43,36],
sm18=[0,-2,37,-1,0,-4,0,-4,37,37,-5,37,-16,37,-11,37,37,37,37,37,37,37,-1,37,-8,37],
sm19=[0,-2,38,-1,0,-4,0,-4,38,38,-5,38,-16,38,-11,38,38,38,38,38,38,38,-1,38,-8,38],
sm20=[0,-2,39,-1,0,-4,0],
sm21=[0,-2,40,-1,0,-4,0],
sm22=[0,-2,2,-1,0,-4,0,-43,41,5],
sm23=[0,-2,42,-1,0,-4,0,-57,43],
sm24=[0,-2,44,-1,0,-4,0,-4,44,44,-5,44,-16,44,-11,44,44,44,44,44,44,44,-1,44,-8,44],
sm25=[0,-2,45,-1,0,-4,0,-4,45,45,-5,45,-16,45,-11,45,45,45,45,45,45,45,-1,45,-8,43],
sm26=[0,-4,0,-4,0,-7,46],
sm27=[0,-4,0,-4,0,-7,47],
sm28=[0,-4,0,-4,0,-7,48],
sm29=[0,49,-1,2,-1,0,-4,0,-12,3,-30,4,5,6,7,-1,8,-8,9],
sm30=[0,50,-1,50,-1,0,-4,0,-7,13,-4,50,-30,50,50,50,50,-1,50,-8,50],
sm31=[0,51,-1,51,-1,0,-4,0,-12,51,-30,51,51,51,51,-1,51,-8,51],
sm32=[0,-4,0,-4,0,-7,13],
sm33=[0,52,-1,52,-1,0,-4,0,-6,52,-5,52,-30,52,52,52,52,-1,52,-8,52],
sm34=[0,-4,53,-4,0,-37,54,55,56],
sm35=[0,-2,57,-1,0,-4,0,-10,58,-9,59,-2,60],
sm36=[0,-4,0,-4,0,-15,61,-22,55,56],
sm37=[0,-2,62,63,0,-4,0,-10,64,-9,65],
sm38=[0,-2,66,-1,0,-4,0,-12,3],
sm39=[0,-2,2,-1,0,-4,0,-43,4,5,6,7,-1,8,-8,9],
sm40=[0,-2,2,-1,0,-4,0,-4,67,67,-5,67,-16,24,-11,25,26,27,4,5,6,7,-1,8,-8,9],
sm41=[0,-2,68,-1,0,-4,0,-4,68,68,-5,68,-16,68,-11,68,68,68,68,68,68,68,-1,68,-8,68],
sm42=[0,-2,69,-1,0,-4,0,-4,69,69,-5,69,-16,69,-11,69,69,69,69,69,69,69,-1,69,-8,69],
sm43=[0,-2,70,-1,0,-4,0,-43,70,70,70,70,-1,70,-8,70],
sm44=[0,-2,71,-1,0,-4,0,-4,71,71,-5,71,-16,71,-11,71,71,71,71,71,6,7,-1,8,-8,9],
sm45=[0,-2,71,-1,0,-4,0,-4,71,71,-5,71,-16,71,-11,71,71,71,71,71,71,71,-1,71,-8,29],
sm46=[0,-2,72,-1,0,-4,0,-4,72,72,-5,72,-16,72,-11,72,72,72,72,72,72,72,-1,72,-8,72],
sm47=[0,-2,73,-1,0,-4,0,-4,73,73,-5,73,-16,73,-11,73,73,73,73,73,73,73,-1,73,-8,73],
sm48=[0,-4,0,-4,0,-57,43],
sm49=[0,-2,74,-1,0,-4,0,-4,74,74,-5,74,-16,74,-11,74,74,74,74,74,74,74,-1,74,-8,74],
sm50=[0,-2,75,-1,0,-4,0,-4,75,75,-5,75,-16,75,-1,75,-9,75,75,75,75,75,75,75,-1,75,75,75,75,75,-4,75],
sm51=[0,-2,76,-1,0,-4,0,-43,76],
sm52=[0,-2,77,-1,0,-4,0,-4,77,77,-5,77,-16,77,-11,77,77,77,77,77,77,77,-1,77,-8,77],
sm53=[0,-2,78,-1,0,-4,0,-4,78,78,-5,78,-16,78,-11,78,78,78,78,78,78,78,-1,78,-8,78],
sm54=[0,-4,0,-4,0,-30,79,-10,80,-7,81,82,83,84],
sm55=[0,-2,31,-1,0,-4,0],
sm56=[0,-4,0,-4,0,-44,33],
sm57=[0,-2,85,-1,0,-4,0,-4,85,85,-4,86,85,-16,85,-11,85,85,85,85,85,85,85,-1,85,-8,85],
sm58=[0,-2,87,-1,0,-4,0,-4,87,87,-5,87,-16,87,-11,87,87,87,87,87,87,87,-1,87,-8,87],
sm59=[0,-2,42,-1,0,-4,0],
sm60=[0,-2,88,-1,0,-4,0,-4,88,88,-5,88,-16,88,-11,88,88,88,88,88,88,88,-1,88,-8,43],
sm61=[0,-2,89,-1,0,-4,0,-4,89,89,-5,89,-16,89,-11,89,89,89,89,89,89,89,-1,89,-8,89],
sm62=[0,-4,90,-4,0,-37,54,55,56],
sm63=[0,-2,57,-1,0,-4,0,-7,91,-1,92,58,-9,59,-2,60],
sm64=[0,-4,93,-4,0,-37,93,93,93],
sm65=[0,-2,94,-1,0,-4,0,-7,94,-1,94,94,-9,94,-2,94],
sm66=[0,-4,0,-4,0,-3,95],
sm67=[0,-4,0,-4,0,-10,96],
sm68=[0,-4,0,-4,0,-4,97,98],
sm69=[0,-4,0,-4,0,-4,99,99,-1,99],
sm70=[0,-4,0,-4,0,-4,100,100,-1,100],
sm71=[0,-2,101,-1,0,-4,0],
sm72=[0,-4,0,-4,0,-4,100,100,-1,100,-10,102],
sm73=[0,-4,0,-4,0,-4,103,103,-1,103,-3,103],
sm74=[0,-4,0,-4,0,-4,104,104,-1,104,-3,104],
sm75=[0,-4,0,-4,0,-4,104,104,-1,104,-3,104,-6,105,106],
sm76=[0,-2,62,-1,0,-4,0,-10,58],
sm77=[0,-1,107,108,-1,0,-4,0,-10,58,-9,109],
sm78=[0,-4,0,-4,0,-4,110,110,-1,110,-3,110,-6,110,110],
sm79=[0,-4,0,-4,0,-4,111,111,-1,111,-2,112,-7,111],
sm80=[0,-2,113,-1,0,-4,0],
sm81=[0,-4,0,-4,0,-5,114],
sm82=[0,-4,0,-4,0,-5,115],
sm83=[0,-4,0,-4,0,-5,116],
sm84=[0,-2,62,63,0,-4,0,-10,64],
sm85=[0,-4,0,-4,0,-5,117,-5,117,-6,118,119],
sm86=[0,-2,120,63,0,-4,0,-10,64,-9,65],
sm87=[0,-4,0,-4,0,-5,121,-5,121,-6,121,121],
sm88=[0,-4,0,-4,0,-5,122,-5,122,-6,122,122],
sm89=[0,-4,0,-4,0,-10,123],
sm90=[0,-4,0,-4,0,-10,112],
sm91=[0,-2,66,-1,0,-4,0,-6,124,-5,3],
sm92=[0,-2,125,-1,0,-4,0,-6,125,126,-4,125],
sm93=[0,-2,127,-1,0,-4,0,-6,127,-5,127],
sm94=[0,-2,128,-1,0,-4,0,-6,128,128,-4,128],
sm95=[0,-2,129,-1,0,-4,0,-6,129,129,-4,129],
sm96=[0,-4,0,-4,0,-57,130],
sm97=[0,-4,0,-4,0,-4,131,131],
sm98=[0,-2,132,-1,0,-4,0,-4,132,132,-5,132,-16,132,-11,132,132,132,132,132,132,132,-1,132,-8,132],
sm99=[0,-2,133,-1,0,-4,0,-4,133,133,-5,133,-16,133,-11,133,133,133,133,133,133,133,-1,133,-8,133],
sm100=[0,-2,134,-1,0,-4,0,-4,134,134,-5,134,-16,134,-11,134,134,134,134,134,134,134,-1,134,-8,29],
sm101=[0,-2,135,-1,0,-4,0,-4,135,135,-5,135,-16,135,-11,135,135,135,135,135,135,135,-1,135,-8,135],
sm102=[0,-2,136,137,0,-4,0],
sm103=[0,-4,0,-4,0,-30,138],
sm104=[0,-2,139,139,0,-4,0],
sm105=[0,-2,140,-1,0,-4,0,-4,140,140,-5,140,-16,140,-11,140,140,140,140,140,140,140,-1,140,-8,140],
sm106=[0,-2,141,-1,0,-4,0,-4,141,141,-5,141,-16,141,-11,141,141,141,141,141,141,141,-1,141,-8,141],
sm107=[0,-2,57,-1,0,-4,0,-7,142,-1,92,58,-9,59,-2,60],
sm108=[0,-4,143,-4,0,-37,143,143,143],
sm109=[0,-2,57,-1,0,-4,0,-7,144,-2,58,-9,59,-2,60],
sm110=[0,-4,0,-4,0,-4,97,-2,145],
sm111=[0,146,-1,146,-1,0,-4,0,-7,146,-4,146,-30,146,146,146,146,-1,146,-8,146],
sm112=[0,-4,0,-4,0,-10,147],
sm113=[0,-4,0,-4,0,-3,148,-34,149],
sm114=[0,-4,0,-4,0,-3,150,-34,150,150],
sm115=[0,-4,0,-4,0,-3,148,-35,151],
sm116=[0,-4,0,-4,0,-38,55,56],
sm117=[0,-2,2,-1,0,-4,0,-6,152,-36,4,5,6,7,-1,8,-8,9],
sm118=[0,-4,0,-4,0,-4,153,153,-1,153,-10,102],
sm119=[0,-4,0,-4,0,-4,111,111,-1,111,-10,111],
sm120=[0,-4,0,-4,0,-4,153,153,-1,153],
sm121=[0,-2,62,-1,0,-4,0,-10,58,-9,109],
sm122=[0,-4,0,-4,0,-4,154,154,-1,154,-3,154,-6,105],
sm123=[0,-4,0,-4,0,-4,155,155,-1,155,-3,155,-7,106],
sm124=[0,-4,0,-4,0,-4,156,156,-1,156,-3,156,-6,156],
sm125=[0,-4,0,-4,0,-4,157,157,-1,157,-3,157,-7,157],
sm126=[0,-4,0,-4,0,-4,158,158,-1,158,-3,158],
sm127=[0,-4,0,-4,0,-11,159],
sm128=[0,-4,0,-4,0,-11,160],
sm129=[0,-4,161,-4,0,-3,162,-6,112,163,-15,164,164,164,164,-26,164],
sm130=[0,-4,0,-4,0,-11,165],
sm131=[0,-4,0,-4,0,-27,166,167,168,169,-26,170],
sm132=[0,-4,0,-4,0,-27,171,172,173,174],
sm133=[0,-4,0,-4,0,-11,175,-15,175,175,175,175,-1,176,-1,177,178,179],
sm134=[0,-4,0,-4,0,-11,175,-15,175,175,175,175],
sm135=[0,-4,180,-4,0,-3,181,-7,182],
sm136=[0,-1,183,-2,0,-4,0,-16,184,185],
sm137=[0,-4,0,-4,0,-5,186,-5,186],
sm138=[0,-4,0,-4,0,-5,186,-5,186,-6,118],
sm139=[0,-4,0,-4,0,-5,186,-5,186,-7,119],
sm140=[0,-4,0,-4,0,-5,187,-5,187,-6,187],
sm141=[0,-4,0,-4,0,-5,188,-5,188,-7,188],
sm142=[0,-4,0,-4,0,-11,189],
sm143=[0,-4,0,-4,0,-11,190],
sm144=[0,-4,161,-4,0,-3,162,-6,112,163,-45,130],
sm145=[0,191,-1,191,-1,0,-4,0,-6,191,-5,191,-30,191,191,191,191,-1,191,-8,191],
sm146=[0,-2,192,-1,0,-4,0,-6,192,-5,192],
sm147=[0,-2,193,-1,0,-4,0,-6,193,194,-4,193],
sm148=[0,-2,195,-1,0,-4,0,-6,195,195,-4,195],
sm149=[0,-2,196,-1,0,-4,0,-6,196,196,-4,196],
sm150=[0,-2,66,-1,0,-4,0],
sm151=[0,-4,197,-4,0,-3,198],
sm152=[0,-4,0,-4,0,-49,199,-3,200,201],
sm153=[0,-4,0,-4,0,-49,202,-3,202,202],
sm154=[0,-2,203,203,0,-4,0],
sm155=[0,-4,0,-4,0,-11,204],
sm156=[0,-2,57,-1,0,-4,0,-7,205,-2,58,-9,59,-2,60],
sm157=[0,-4,0,-4,0,-4,97,-2,206],
sm158=[0,207,-1,207,-1,0,-4,0,-7,207,-4,207,-30,207,207,207,207,-1,207,-8,207],
sm159=[0,-4,0,-4,0,-4,97,-2,208],
sm160=[0,-2,209,63,0,-4,0,-10,64,-9,65],
sm161=[0,-2,210,-1,0,-4,0,-5,210,-1,210,-1,210,210,210,-8,210,-2,210],
sm162=[0,-4,0,-4,0,-3,211,-34,211,211],
sm163=[0,-4,0,-4,0,-11,212],
sm164=[0,-4,0,-4,0,-6,213],
sm165=[0,-2,2,-1,0,-4,0,-6,214,-36,4,5,6,7,-1,8,-8,9],
sm166=[0,-2,215,-1,0,-4,0,-6,215,-36,215,215,215,215,-1,215,-8,215],
sm167=[0,-4,0,-4,0,-4,216,216,-1,216],
sm168=[0,-4,0,-4,0,-4,217,217,-1,217],
sm169=[0,-4,0,-4,0,-4,218,218,-1,218],
sm170=[0,-4,0,-4,0,-4,104,104,-1,104,-10,105],
sm171=[0,-4,0,-4,0,-4,219,219,-1,219,-3,219,-6,219],
sm172=[0,-4,0,-4,0,-4,220,220,-1,220,-3,220,-7,220],
sm173=[0,-4,0,-4,0,-4,221,221,-1,221,-3,221,-6,221],
sm174=[0,-4,0,-4,0,-4,222,222,-1,222,-3,222,-7,222],
sm175=[0,-4,0,-4,0,-4,223,223,-1,223,-3,223,-6,223,223],
sm176=[0,-4,0,-4,0,-4,224,224,-1,224,-3,224,-6,224,224],
sm177=[0,-4,161,-4,0,-3,162,-7,225],
sm178=[0,-4,0,-4,0,-4,226,226,-1,226,-3,226,-6,226,226],
sm179=[0,-4,227,-4,0,-3,227,-7,227],
sm180=[0,-4,228,-4,0,-3,228,-7,228],
sm181=[0,-1,107,229,-1,0,-4,0],
sm182=[0,-1,230,230,-1,0,-4,0],
sm183=[0,-1,230,230,-1,0,-4,0,-30,231],
sm184=[0,-2,229,-1,0,-4,0],
sm185=[0,-2,232,-1,0,-4,0],
sm186=[0,-2,233,-1,0,-4,0],
sm187=[0,-2,234,-1,0,-4,0],
sm188=[0,-2,234,-1,0,-4,0,-30,235],
sm189=[0,-4,0,-4,0,-11,236,-15,236,236,236,236],
sm190=[0,-1,237,-2,0,-4,0],
sm191=[0,-4,0,-4,0,-11,238,-15,238,238,238,238],
sm192=[0,-4,180,-4,0,-3,181,-7,239],
sm193=[0,-4,240,-4,0,-3,240,-7,240],
sm194=[0,-4,241,-4,0,-3,241,-7,241],
sm195=[0,-1,183,-2,0,-4,0,-6,242,-9,184,185],
sm196=[0,-1,243,-2,0,-4,0,-6,243,-9,243,243],
sm197=[0,-4,0,-4,0,-4,244,245],
sm198=[0,-4,0,-4,0,-4,246,246],
sm199=[0,-4,0,-4,0,-4,247,247],
sm200=[0,-4,0,-4,0,-33,248],
sm201=[0,-4,0,-4,0,-6,249],
sm202=[0,-4,0,-4,0,-5,250,-5,250,-6,250],
sm203=[0,-4,0,-4,0,-5,251,-5,251,-7,251],
sm204=[0,-4,0,-4,0,-5,252,-5,252,-6,252],
sm205=[0,-4,0,-4,0,-5,253,-5,253,-7,253],
sm206=[0,-4,0,-4,0,-5,254,-5,254,-6,254,254],
sm207=[0,-4,0,-4,0,-5,255,-5,255,-6,255,255],
sm208=[0,-4,0,-4,0,-11,256],
sm209=[0,-2,257,-1,0,-4,0,-6,257,257,-4,257],
sm210=[0,-2,258,-1,197,-4,0,-3,198,-2,258,258,-3,258,258,-42,259],
sm211=[0,-2,260,-1,260,-4,0,-3,260,-2,260,260,-3,260,260,-42,260],
sm212=[0,-2,261,-1,261,-4,0,-3,261,-2,261,261,-3,261,261,-42,261],
sm213=[0,-4,0,-4,0,-49,262],
sm214=[0,-2,263,-1,0,-4,0,-4,263,263,-5,263,-16,263,-11,263,263,263,263,263,263,263,-1,263,-8,263],
sm215=[0,-4,0,-4,0,-49,264],
sm216=[0,-2,265,-1,0,-4,0,-4,265,265,-5,265,-16,265,-11,265,265,265,265,265,265,265,-1,265,-8,265],
sm217=[0,-4,0,-4,0,-4,97,-2,266],
sm218=[0,267,-1,267,-1,0,-4,0,-7,267,-4,267,-30,267,267,267,267,-1,267,-8,267],
sm219=[0,-4,0,-4,0,-11,268],
sm220=[0,-4,0,-4,0,-11,269],
sm221=[0,-4,0,-4,0,-10,112,-46,130],
sm222=[0,-2,270,-1,0,-4,0,-7,270,-1,270,270,-9,270,-2,270],
sm223=[0,-4,0,-4,0,-7,271],
sm224=[0,-2,272,-1,0,-4,0,-6,272,-36,272,272,272,272,-1,272,-8,272],
sm225=[0,-4,0,-4,0,-4,273,273,-1,273,-3,273,-6,273,273],
sm226=[0,-4,274,-4,0,-3,274,-7,274],
sm227=[0,-4,0,-4,0,-11,275],
sm228=[0,-4,0,-4,0,-11,175],
sm229=[0,-4,0,-4,0,-11,164],
sm230=[0,-4,0,-4,0,-11,276],
sm231=[0,-1,277,277,-1,0,-4,0],
sm232=[0,-4,0,-4,0,-28,278],
sm233=[0,-4,0,-4,0,-27,279,-1,280],
sm234=[0,-2,281,-1,0,-4,0],
sm235=[0,-4,0,-4,0,-11,282,-15,282,282,282,282],
sm236=[0,-4,283,-4,0,-3,283,-7,283],
sm237=[0,-4,0,-4,0,-7,284],
sm238=[0,-1,285,-2,0,-4,0,-6,285,-9,285,285],
sm239=[0,-4,0,-4,0,-4,286,286],
sm240=[0,-4,0,-4,0,-7,287],
sm241=[0,-4,0,-4,0,-5,288,-5,288,-6,288,288],
sm242=[0,-2,289,-1,0,-4,0,-6,289,289,-4,289],
sm243=[0,-2,290,-1,0,-4,0,-6,290,290,-3,290,290],
sm244=[0,-2,291,-1,291,-4,0,-3,291,-2,291,291,-3,291,291,-42,291],
sm245=[0,-4,0,-4,0,-56,292],
sm246=[0,-2,293,-1,0,-4,0,-4,293,293,-5,293,-16,293,-11,293,293,293,293,293,293,293,-1,293,-8,293],
sm247=[0,294,-1,294,-1,0,-4,0,-7,294,-4,294,-30,294,294,294,294,-1,294,-8,294],
sm248=[0,-2,295,-1,0,-4,0,-7,295,-2,295,-9,295,-2,295],
sm249=[0,-1,296,296,-1,0,-4,0,-30,297],
sm250=[0,-1,298,298,-1,0,-4,0],
sm251=[0,-2,66,-1,0,-4,0,-6,299,-5,3],
sm252=[0,-4,0,-4,0,-4,300,300],
sm253=[0,-2,301,-1,0,-4,0,-6,301,301,-3,301,301],
sm254=[0,-4,0,-4,0,-11,302],
sm255=[0,-1,303,303,-1,0,-4,0],
sm256=[0,-1,304,-2,0,-4,0,-6,304,-9,304,304],

    // Symbol Lookup map
    lu = new Map([[1,1],[2,2],[4,3],[8,4],[16,5],[32,6],[64,7],[128,8],[256,9],[512,10],[3,11],[264,11],[200,13],[",",14],["{",15],["}",16],[";",17],[null,3],["supports",19],["(",20],[")",21],["@",22],["import",23],["keyframes",24],["id",25],["from",26],["to",27],["and",28],["or",29],["not",30],["media",32],["only",33],[":",67],["<",37],[">",38],["<=",39],["=",40],["/",42],["%",43],["px",44],["in",45],["rad",46],["url",47],["\"",48],["'",49],["+",50],["~",51],["||",52],["*",53],["|",54],["#",55],[".",56],["[",58],["]",59],["^=",60],["$=",61],["*=",62],["i",63],["s",64],["!",65],["important",66]]),

    //Reverse Symbol Lookup map
    rlu = new Map([[1,1],[2,2],[3,4],[4,8],[5,16],[6,32],[7,64],[8,128],[9,256],[10,512],[11,3],[11,264],[13,200],[14,","],[15,"{"],[16,"}"],[17,";"],[3,null],[19,"supports"],[20,"("],[21,")"],[22,"@"],[23,"import"],[24,"keyframes"],[25,"id"],[26,"from"],[27,"to"],[28,"and"],[29,"or"],[30,"not"],[32,"media"],[33,"only"],[67,":"],[37,"<"],[38,">"],[39,"<="],[40,"="],[42,"/"],[43,"%"],[44,"px"],[45,"in"],[46,"rad"],[47,"url"],[48,"\""],[49,"'"],[50,"+"],[51,"~"],[52,"||"],[53,"*"],[54,"|"],[55,"#"],[56,"."],[58,"["],[59,"]"],[60,"^="],[61,"$="],[62,"*="],[63,"i"],[64,"s"],[65,"!"],[66,"important"]]),

    // States 
    state = [sm0,
sm1,
sm2,
sm2,
sm3,
sm4,
sm5,
sm6,
sm6,
sm7,
sm8,
sm9,
sm10,
sm10,
sm11,
sm12,
sm13,
sm14,
sm15,
sm16,
sm17,
sm18,
sm19,
sm19,
sm19,
sm19,
sm20,
sm21,
sm22,
sm23,
sm24,
sm25,
sm26,
sm27,
sm28,
sm29,
sm30,
sm31,
sm32,
sm33,
sm34,
sm35,
sm36,
sm37,
sm38,
sm39,
sm40,
sm41,
sm39,
sm42,
sm43,
sm43,
sm43,
sm43,
sm44,
sm45,
sm45,
sm46,
sm47,
sm48,
sm49,
sm50,
sm51,
sm52,
sm53,
sm54,
sm55,
sm56,
sm57,
sm58,
sm59,
sm60,
sm61,
sm33,
sm33,
sm33,
sm62,
sm63,
sm64,
sm65,
sm65,
sm66,
sm66,
sm67,
sm68,
sm69,
sm70,
sm71,
sm72,
sm73,
sm73,
sm74,
sm74,
sm75,
sm76,
sm77,
sm78,
sm78,
sm79,
sm80,
sm81,
sm82,
sm82,
sm83,
sm84,
sm85,
sm86,
sm87,
sm87,
sm88,
sm88,
sm89,
sm90,
sm91,
sm92,
sm93,
sm94,
sm95,
sm96,
sm97,
sm98,
sm99,
sm100,
sm101,
sm102,
sm103,
sm104,
sm104,
sm104,
sm104,
sm105,
sm39,
sm106,
sm107,
sm108,
sm109,
sm110,
sm111,
sm112,
sm113,
sm114,
sm115,
sm116,
sm117,
sm35,
sm118,
sm119,
sm120,
sm121,
sm122,
sm123,
sm124,
sm76,
sm125,
sm76,
sm126,
sm127,
sm128,
sm129,
sm76,
sm130,
sm130,
sm130,
sm131,
sm132,
sm133,
sm134,
sm134,
sm135,
sm136,
sm117,
sm137,
sm138,
sm139,
sm140,
sm84,
sm141,
sm84,
sm142,
sm143,
sm144,
sm39,
sm145,
sm146,
sm147,
sm148,
sm149,
sm150,
sm151,
sm152,
sm153,
sm153,
sm154,
sm155,
sm156,
sm157,
sm158,
sm159,
sm158,
sm158,
sm160,
sm161,
sm162,
sm161,
sm163,
sm164,
sm165,
sm166,
sm167,
sm168,
sm169,
sm170,
sm171,
sm172,
sm173,
sm174,
sm175,
sm176,
sm177,
sm178,
sm179,
sm180,
sm180,
sm181,
sm181,
sm182,
sm183,
sm182,
sm182,
sm184,
sm185,
sm186,
sm187,
sm188,
sm187,
sm187,
sm189,
sm190,
sm191,
sm191,
sm191,
sm192,
sm178,
sm193,
sm194,
sm194,
sm195,
sm196,
sm197,
sm198,
sm199,
sm199,
sm199,
sm200,
sm201,
sm202,
sm203,
sm204,
sm205,
sm206,
sm207,
sm208,
sm150,
sm209,
sm210,
sm211,
sm212,
sm212,
sm213,
sm214,
sm215,
sm215,
sm216,
sm217,
sm218,
sm218,
sm218,
sm219,
sm220,
sm220,
sm221,
sm222,
sm223,
sm224,
sm225,
sm226,
sm227,
sm228,
sm229,
sm230,
sm231,
sm230,
sm232,
sm233,
sm234,
sm235,
sm225,
sm236,
sm237,
sm238,
sm38,
sm136,
sm239,
sm240,
sm241,
sm242,
sm243,
sm244,
sm245,
sm246,
sm247,
sm248,
sm181,
sm249,
sm181,
sm250,
sm250,
sm251,
sm252,
sm253,
sm254,
sm255,
sm254,
sm256],

/************ Functions *************/

    max = Math.max,

    //Error Functions
    e = (tk,r,o,l,p)=>{if(l.END)l.throw("Unexpected end of input");else if(l.ty & (264)) l.throw(`Unexpected space character within input "${1}" `) ; else l.throw(`Unexpected token ${l.tx} within input "${111}" `)}, 
    eh = [e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e],

    //Empty Function
    nf = ()=>-1, 

    //Environment Functions
    
redv = (ret, fn, plen, ln, t, e, o, l, s) => {        ln = max(o.length - plen, 0);        o[ln] = fn(o.slice(-plen), e, l, s, o, plen);        o.length = ln + 1;        return ret;    },
rednv = (ret, Fn, plen, ln, t, e, o, l, s) => {        ln = max(o.length - plen, 0);        o[ln] = new Fn(o.slice(-plen), e, l, s, o, plen);        o.length = ln + 1;        return ret;    },
redn = (ret, plen, t, e, o, l, s) => {        let ln = max(o.length - plen, 0);        o[ln] = o[o.length -1];        o.length = ln + 1;        return ret;    },
shftf = (ret, fn, t, e, o, l, s) => (fn(o, e, l, s), ret),
R0_import_list=function (sym,env,lex,state,output,len) {return sym[0].push(sym[1]),sym[0]},
R1_import_list=function (sym,env,lex,state,output,len) {return [sym[0]]},
R0_COMPLEX_SELECTOR_list=function (sym,env,lex,state,output,len) {return sym[0].push(sym[2]),sym[0]},
C0_RULE_SET=function (sym,env,lex,state,output,len) {this.selectors=sym[0]; this.body = sym[2]},
R0_general_enclosed6102_group_list=function (sym,env,lex,state,output,len) {return sym[0] + sym[1]},
R1_general_enclosed6102_group_list=function (sym,env,lex,state,output,len) {return sym[0] + ""},
R0_COMPLEX_SELECTOR=function (sym,env,lex,state,output,len) {return len>1? [sym[0]].concat(sym[1]) : [sym[0]]},
R0_declaration_list=function (sym,env,lex,state,output,len) {return sym[0].push(sym[1]), sym[0]},
R1_declaration_list=function (sym,env,lex,state,output,len) {return sym[0].concat(sym[1])},

    //Sparse Map Lookup
    lsm = (index, map) => {    if (map[0] == 0xFFFFFFFF) return map[index+1];    for (let i = 1, ind = 0, l = map.length, n = 0; i < l && ind <= index; i++) {        if (ind !== index) {            if ((n = map[i]) > -1) ind++;            else ind += -n;        } else return map[i];    }    return -1;},

    //State Action Functions
    state_funct = [(...v)=>((redn(4099,0,...v))),
()=>(74),
()=>(22),
()=>(70),
()=>(82),
()=>(106),
()=>(110),
()=>(114),
()=>(118),
(...v)=>(redn(5,1,...v)),
(...v)=>(redn(4103,1,...v)),
(...v)=>(redv(1031,R1_import_list,1,0,...v)),
()=>(158),
()=>(174),
()=>(162),
()=>(170),
()=>(166),
(...v)=>(redv(3079,R1_import_list,1,0,...v)),
(...v)=>(redn(2055,1,...v)),
()=>(182),
()=>(178),
(...v)=>(redv(5127,R1_import_list,1,0,...v)),
(...v)=>(redv(77831,R0_COMPLEX_SELECTOR,1,0,...v)),
()=>(202),
()=>(206),
()=>(210),
()=>(214),
(...v)=>(rednv(82951,fn.compoundSelector,1,0,...v)),
()=>(238),
(...v)=>(rednv(84999,fn.selector,1,0,...v)),
()=>(246),
()=>(242),
(...v)=>(redn(86023,1,...v)),
(...v)=>(redn(88071,1,...v)),
()=>(250),
(...v)=>(redn(87047,1,...v)),
(...v)=>(redv(78855,R1_import_list,1,0,...v)),
(...v)=>(redn(89095,1,...v)),
()=>(254),
()=>(258),
()=>(270),
()=>(274),
()=>(282),
(...v)=>(redv(81927,R1_import_list,1,0,...v)),
(...v)=>(redn(80903,1,...v)),
()=>(294),
()=>(298),
()=>(302),
(...v)=>(redn(4107,2,...v)),
(...v)=>(redv(1035,R0_import_list,2,0,...v)),
(...v)=>(redv(3083,R0_import_list,2,0,...v)),
(...v)=>(redn(9227,2,...v)),
()=>(314),
()=>(334),
()=>(326),
()=>(330),
()=>(394),
()=>(382),
()=>(378),
()=>(398),
()=>(406),
()=>(450),
()=>(446),
()=>(426),
()=>(418),
()=>(474),
(...v)=>(redv(77835,R0_COMPLEX_SELECTOR,2,0,...v)),
(...v)=>(redv(76807,R1_import_list,1,0,...v)),
(...v)=>(rednv(75783,fn.comboSelector,1,0,...v)),
(...v)=>(redn(83975,1,...v)),
(...v)=>(rednv(82955,fn.compoundSelector,2,0,...v)),
(...v)=>(redv(78859,R0_import_list,2,0,...v)),
(...v)=>(redv(81931,R0_import_list,2,0,...v)),
(...v)=>(rednv(85003,fn.selector,2,0,...v)),
(...v)=>(redn(88075,2,...v)),
(...v)=>(redn(87051,2,...v)),
(...v)=>(rednv(90123,fn.idSelector,2,0,...v)),
(...v)=>(rednv(91147,fn.classSelector,2,0,...v)),
()=>(518),
()=>(502),
()=>(494),
()=>(506),
()=>(510),
()=>(514),
(...v)=>(rednv(97291,fn.pseudoClassSelector,2,0,...v)),
()=>(526),
(...v)=>(rednv(98315,fn.pseudoElementSelector,2,0,...v)),
(...v)=>(redn(80907,2,...v)),
(...v)=>(redv(79879,R1_import_list,1,0,...v)),
()=>(538),
()=>(550),
()=>(554),
(...v)=>(redv(10247,R1_import_list,1,0,...v)),
(...v)=>(redn(11271,1,...v)),
()=>(562),
()=>(570),
()=>(578),
()=>(574),
(...v)=>(redv(32775,R1_import_list,1,0,...v)),
(...v)=>(redn(36871,1,...v)),
()=>(586),
()=>(594),
(...v)=>(redn(38919,1,...v)),
(...v)=>(redn(37895,1,...v)),
()=>(610),
()=>(618),
()=>(662),
()=>(634),
()=>(638),
(...v)=>(redn(47111,1,...v)),
(...v)=>(redn(66567,1,...v)),
()=>(674),
(...v)=>(redn(34823,1,...v)),
()=>(678),
(...v)=>(redn(18439,1,...v)),
()=>(682),
(...v)=>(redn(27655,1,...v)),
()=>(702),
()=>(710),
()=>(722),
(...v)=>(redn(28679,1,...v)),
(...v)=>(redn(29703,1,...v)),
()=>(726),
()=>(730),
(...v)=>(redn(103431,1,...v)),
()=>(750),
(...v)=>(redv(103431,R1_import_list,1,0,...v)),
(...v)=>(redv(100359,R1_import_list,1,0,...v)),
(...v)=>(redn(99335,1,...v)),
()=>(754),
(...v)=>(redv(5135,R0_COMPLEX_SELECTOR_list,3,0,...v)),
(...v)=>(redv(76811,R0_import_list,2,0,...v)),
(...v)=>(rednv(75787,fn.comboSelector,2,0,...v)),
(...v)=>(rednv(82959,fn.compoundSelector,3,0,...v)),
(...v)=>(rednv(93199,fn.attribSelector,3,0,...v)),
()=>(762),
()=>(766),
()=>(770),
(...v)=>(redn(94215,1,...v)),
(...v)=>(rednv(97295,fn.pseudoClassSelector,3,0,...v)),
(...v)=>(redv(79883,R0_import_list,2,0,...v)),
()=>(786),
(...v)=>(redv(10251,R0_import_list,2,0,...v)),
()=>(794),
()=>(798),
(...v)=>(redn(15379,4,...v)),
()=>(802),
()=>(810),
()=>(806),
(...v)=>(redv(73735,R1_general_enclosed6102_group_list,1,0,...v)),
()=>(814),
(...v)=>((redn(8195,0,...v))),
(...v)=>(redn(36875,2,...v)),
(...v)=>(redn(43019,2,...v)),
(...v)=>(redn(46091,2,...v)),
(...v)=>(redv(41991,R1_import_list,1,0,...v)),
(...v)=>(redv(45063,R1_import_list,1,0,...v)),
(...v)=>(redn(39947,2,...v)),
()=>(866),
()=>(870),
()=>(890),
()=>(886),
()=>(878),
(...v)=>(redn(65543,1,...v)),
(...v)=>(redn(48135,1,...v)),
()=>(902),
()=>(906),
()=>(910),
()=>(914),
()=>(894),
()=>(930),
()=>(934),
()=>(938),
()=>(942),
(...v)=>(redn(63495,1,...v)),
()=>(950),
()=>(954),
()=>(958),
()=>(962),
()=>(982),
()=>(978),
()=>(970),
()=>(1014),
()=>(1002),
()=>(1006),
(...v)=>(redn(27659,2,...v)),
(...v)=>(redv(24583,R1_import_list,1,0,...v)),
(...v)=>(redv(26631,R1_import_list,1,0,...v)),
()=>(1038),
()=>(1042),
(...v)=>(rednv(6163,C0_RULE_SET,4,0,...v)),
(...v)=>(redv(103435,R0_declaration_list,2,0,...v)),
(...v)=>(redv(103435,R1_declaration_list,2,0,...v)),
()=>(1050),
(...v)=>(redv(102407,R1_import_list,1,0,...v)),
(...v)=>(redn(101383,1,...v)),
()=>(1066),
()=>(1070),
()=>(1078),
()=>(1082),
()=>(1086),
(...v)=>(redn(92167,1,...v)),
(...v)=>(redn(94219,2,...v)),
()=>(1090),
()=>(1098),
()=>(1102),
(...v)=>(redn(15383,5,...v)),
()=>(1106),
()=>(1122),
(...v)=>(redn(74767,3,...v)),
(...v)=>(redv(73739,R0_general_enclosed6102_group_list,2,0,...v)),
()=>(1126),
()=>(1130),
(...v)=>(redn(8199,1,...v)),
(...v)=>(redv(7175,R1_import_list,1,0,...v)),
(...v)=>(redv(32783,R0_COMPLEX_SELECTOR_list,3,0,...v)),
(...v)=>(redn(36879,3,...v)),
(...v)=>(redn(35851,2,...v)),
(...v)=>(redv(41995,R0_import_list,2,0,...v)),
(...v)=>(redv(45067,R0_import_list,2,0,...v)),
(...v)=>(redn(40971,2,...v)),
(...v)=>(redn(44043,2,...v)),
(...v)=>(redn(47119,3,...v)),
(...v)=>(redn(49167,3,...v)),
()=>(1138),
(...v)=>(redn(54287,3,...v)),
(...v)=>(redv(53255,R1_general_enclosed6102_group_list,1,0,...v)),
(...v)=>(redn(52231,1,...v)),
()=>(1154),
(...v)=>(redn(56327,1,...v)),
()=>(1162),
()=>(1170),
()=>(1174),
(...v)=>(redn(57351,1,...v)),
()=>(1178),
(...v)=>(redn(70667,2,...v)),
()=>(1182),
(...v)=>(redn(69639,1,...v)),
()=>(1186),
(...v)=>(redv(51207,R1_general_enclosed6102_group_list,1,0,...v)),
(...v)=>(redn(50183,1,...v)),
()=>(1194),
(...v)=>(redv(16391,R1_import_list,1,0,...v)),
()=>(1206),
()=>(1202),
(...v)=>(redv(19463,R1_import_list,1,0,...v)),
(...v)=>(redn(21511,1,...v)),
()=>(1210),
()=>(1214),
(...v)=>(redv(24587,R0_import_list,2,0,...v)),
(...v)=>(redv(26635,R0_import_list,2,0,...v)),
(...v)=>(redn(23563,2,...v)),
(...v)=>(redn(25611,2,...v)),
(...v)=>(redn(28687,3,...v)),
(...v)=>(redn(30735,3,...v)),
()=>(1218),
(...v)=>(redv(100367,R0_COMPLEX_SELECTOR_list,3,0,...v)),
(...v)=>(redv(107535,fn.parseDeclaration,3,0,...v)),
()=>(1234),
(...v)=>(redv(105479,R1_general_enclosed6102_group_list,1,0,...v)),
(...v)=>(redn(104455,1,...v)),
()=>(1238),
(...v)=>(rednv(93207,fn.attribSelector,5,0,...v)),
(...v)=>(redn(95239,1,...v)),
(...v)=>(redn(96271,3,...v)),
()=>(1242),
(...v)=>(redn(15387,6,...v)),
()=>(1246),
(...v)=>(redn(12295,1,...v)),
(...v)=>(redn(71699,4,...v)),
(...v)=>(redn(33819,6,...v)),
(...v)=>(redv(7179,R0_import_list,2,0,...v)),
(...v)=>(redn(54291,4,...v)),
(...v)=>(redv(53259,R0_general_enclosed6102_group_list,2,0,...v)),
(...v)=>(redn(55311,3,...v)),
(...v)=>(redn(62479,3,...v)),
(...v)=>(redn(56331,2,...v)),
()=>(1254),
()=>(1262),
()=>(1266),
(...v)=>(redn(57355,2,...v)),
(...v)=>(redn(67599,3,...v)),
(...v)=>(redv(51211,R0_general_enclosed6102_group_list,2,0,...v)),
(...v)=>(redn(17435,6,...v)),
(...v)=>(redv(16395,R0_import_list,2,0,...v)),
(...v)=>(redn(68619,2,...v)),
(...v)=>(redn(22555,6,...v)),
(...v)=>(redn(31763,4,...v)),
(...v)=>(redv(102415,R0_COMPLEX_SELECTOR_list,3,0,...v)),
(...v)=>(redv(107539,fn.parseDeclaration,4,0,...v)),
(...v)=>(redv(105483,R0_general_enclosed6102_group_list,2,0,...v)),
()=>(1278),
(...v)=>(rednv(93211,fn.attribSelector,6,0,...v)),
(...v)=>(redn(15391,7,...v)),
(...v)=>(redn(13331,4,...v)),
(...v)=>(redn(59399,1,...v)),
()=>(1286),
(...v)=>(redn(61447,1,...v)),
()=>(1294),
(...v)=>(redv(19471,R0_COMPLEX_SELECTOR_list,3,0,...v)),
(...v)=>(redn(106507,2,...v)),
(...v)=>(redn(62487,5,...v)),
(...v)=>(redn(59403,2,...v)),
(...v)=>(redn(20499,4,...v))],

    //Goto Lookup Functions
    goto = [v=>lsm(v,gt0),
nf,
v=>lsm(v,gt1),
v=>lsm(v,gt2),
nf,
nf,
nf,
nf,
nf,
nf,
nf,
v=>lsm(v,gt3),
v=>lsm(v,gt4),
v=>lsm(v,gt5),
v=>lsm(v,gt6),
nf,
nf,
nf,
nf,
nf,
nf,
nf,
nf,
nf,
nf,
nf,
nf,
nf,
v=>lsm(v,gt7),
v=>lsm(v,gt8),
nf,
v=>lsm(v,gt9),
nf,
nf,
nf,
v=>lsm(v,gt2),
nf,
nf,
nf,
nf,
v=>lsm(v,gt10),
v=>lsm(v,gt11),
v=>lsm(v,gt12),
v=>lsm(v,gt13),
v=>lsm(v,gt14),
v=>lsm(v,gt15),
v=>lsm(v,gt16),
nf,
v=>lsm(v,gt17),
nf,
nf,
nf,
nf,
nf,
v=>lsm(v,gt18),
v=>lsm(v,gt6),
v=>lsm(v,gt6),
nf,
nf,
v=>lsm(v,gt8),
nf,
nf,
nf,
nf,
nf,
v=>lsm(v,gt19),
nf,
nf,
v=>lsm(v,gt20),
nf,
nf,
v=>lsm(v,gt21),
nf,
nf,
nf,
nf,
v=>lsm(v,gt22),
v=>lsm(v,gt23),
nf,
nf,
nf,
v=>lsm(v,gt24),
v=>lsm(v,gt25),
nf,
nf,
nf,
nf,
v=>lsm(v,gt26),
v=>lsm(v,gt27),
nf,
nf,
nf,
nf,
v=>lsm(v,gt28),
v=>lsm(v,gt29),
v=>lsm(v,gt30),
nf,
nf,
nf,
nf,
nf,
nf,
nf,
nf,
v=>lsm(v,gt31),
v=>lsm(v,gt32),
v=>lsm(v,gt33),
nf,
nf,
nf,
nf,
nf,
nf,
v=>lsm(v,gt34),
nf,
nf,
nf,
nf,
nf,
nf,
nf,
nf,
v=>lsm(v,gt6),
nf,
v=>lsm(v,gt35),
nf,
nf,
nf,
nf,
nf,
nf,
v=>lsm(v,gt36),
nf,
v=>lsm(v,gt37),
nf,
v=>lsm(v,gt38),
nf,
nf,
nf,
nf,
nf,
nf,
v=>lsm(v,gt39),
v=>lsm(v,gt40),
v=>lsm(v,gt41),
v=>lsm(v,gt42),
nf,
nf,
v=>lsm(v,gt43),
v=>lsm(v,gt44),
v=>lsm(v,gt45),
nf,
v=>lsm(v,gt46),
nf,
v=>lsm(v,gt47),
nf,
nf,
nf,
v=>lsm(v,gt48),
v=>lsm(v,gt29),
nf,
nf,
nf,
v=>lsm(v,gt49),
v=>lsm(v,gt50),
v=>lsm(v,gt51),
nf,
nf,
v=>lsm(v,gt52),
v=>lsm(v,gt53),
v=>lsm(v,gt54),
nf,
v=>lsm(v,gt55),
v=>lsm(v,gt56),
nf,
v=>lsm(v,gt57),
nf,
v=>lsm(v,gt58),
nf,
nf,
v=>lsm(v,gt48),
v=>lsm(v,gt59),
nf,
nf,
nf,
nf,
nf,
v=>lsm(v,gt60),
v=>lsm(v,gt61),
v=>lsm(v,gt62),
nf,
nf,
nf,
nf,
v=>lsm(v,gt63),
nf,
nf,
nf,
nf,
nf,
v=>lsm(v,gt64),
nf,
nf,
nf,
nf,
nf,
v=>lsm(v,gt65),
nf,
nf,
nf,
nf,
v=>lsm(v,gt66),
nf,
nf,
nf,
nf,
nf,
nf,
v=>lsm(v,gt67),
nf,
nf,
nf,
nf,
v=>lsm(v,gt68),
v=>lsm(v,gt69),
nf,
nf,
nf,
nf,
v=>lsm(v,gt70),
nf,
nf,
nf,
nf,
nf,
nf,
nf,
nf,
nf,
nf,
nf,
v=>lsm(v,gt71),
nf,
nf,
nf,
nf,
v=>lsm(v,gt72),
nf,
nf,
nf,
nf,
nf,
nf,
nf,
nf,
nf,
nf,
nf,
nf,
nf,
nf,
nf,
v=>lsm(v,gt73),
nf,
v=>lsm(v,gt74),
nf,
nf,
nf,
nf,
nf,
nf,
nf,
nf,
nf,
nf,
nf,
nf,
nf,
nf,
nf,
nf,
nf,
nf,
nf,
nf,
nf,
nf,
nf,
nf,
nf,
nf,
nf,
v=>lsm(v,gt75),
v=>lsm(v,gt76),
nf,
nf,
nf,
nf,
nf,
nf,
v=>lsm(v,gt77),
v=>lsm(v,gt78),
nf,
nf,
nf,
nf,
nf,
nf,
nf,
nf,
nf,
nf,
v=>lsm(v,gt79),
nf,
v=>lsm(v,gt80),
nf,
nf,
v=>lsm(v,gt34),
nf,
nf,
nf,
nf,
nf,
nf];

function getToken(l, SYM_LU) {
    if (l.END) return 0; /*3*/

    switch (l.ty) {
        case 2:
            if (SYM_LU.has(l.tx)) return SYM_LU.get(l.tx);
            return 2;
        case 1:
            return 1;
        case 4:
            return 3;
        case 256:
            return 9;
        case 8:
            return 4;
        case 512:
            return 10;
        default:
            return SYM_LU.get(l.tx) || SYM_LU.get(l.ty);
    }
}

/************ Parser *************/

function parser(l, e = {}) {
    
    fn = e.functions;

    l.IWS = false;
    l.PARSE_STRING = true;

    if (symbols.length > 0) {
        symbols.forEach(s => { l.addSymbol(s) });
        l.tl = 0;
        l.next();
    }

    const o = [],
        ss = [0, 0];

    let time = 1000000,
        RECOVERING = 100,
        tk = getToken(l, lu),
        p = l.copy(),
        sp = 1,
        len = 0,
        off = 0;

    outer:

        while (time-- > 0) {

            const fn = lsm(tk, state[ss[sp]]) || 0;

            /*@*/// console.log({end:l.END, state:ss[sp], tx:l.tx, ty:l.ty, tk:tk, rev:rlu.get(tk), s_map:state[ss[sp]], res:lsm(tk, state[ss[sp]])});

            let r,
                gt = -1;

            if (fn == 0) {
                /*Ignore the token*/
                l.next();
                tk = getToken(l, lu);
                continue;
            }

            if (fn > 0) {
                r = state_funct[fn - 1](tk, e, o, l, ss[sp - 1]);
            } else {

                if (RECOVERING > 1 && !l.END) {
                    if (tk !== lu.get(l.ty)) {
                        //console.log("ABLE", rlu.get(tk), l.tx, tk )
                        tk = lu.get(l.ty);
                        continue;
                    }

                    if (tk !== 13) {
                        //console.log("MABLE")
                        tk = 13;
                        RECOVERING = 1;
                        continue;
                    }
                }

                tk = getToken(l, lu);

                const recovery_token = eh[ss[sp]](tk, e, o, l, p, ss[sp], lu);

                if (RECOVERING > 0 && recovery_token) {
                    RECOVERING = -1; /* To prevent infinite recursion */
                    tk = recovery_token;
                    l.tl = 0; /*reset current token */
                    continue;
                }
            }

            switch (r & 3) {
                case 0:
                    /* ERROR */

                    if (tk == "$")
                        l.throw("Unexpected end of input");
                    l.throw(`Unexpected token [${RECOVERING ? l.next().tx : l.tx}]`);
                    return [null];

                case 1:
                    /* ACCEPT */
                    break outer;

                case 2:
                    /*SHIFT */
                    o.push(l.tx);
                    ss.push(off, r >> 2);
                    sp += 2;
                    p.sync(l);
                    l.next();
                    off = l.off;
                    tk = getToken(l, lu);
                    RECOVERING++;
                    break;

                case 3:
                    /* REDUCE */

                    len = (r & 0x3FC) >> 1;

                    ss.length -= len;
                    sp -= len;
                    gt = goto[ss[sp]](r >> 10);

                    if (gt < 0)
                        l.throw("Invalid state reached!");

                    ss.push(off, gt);
                    sp += 2;
                    break;
            }
        }
    return o[0];
}; export default parser;